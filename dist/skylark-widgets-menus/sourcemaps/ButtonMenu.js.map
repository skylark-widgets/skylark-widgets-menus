{"version":3,"sources":["ButtonMenu.js"],"names":["define","Widget","TextMixin","menus","ButtonMenu","inherit","_construct","parent","prototype","call","this","_elm","style","cursor","preventDragEvents","skin","getSkin","color","textColor","display","_buildText","setColor","buttonColor","buttonOverColor","span","textIndent","icon","baseColor","overColor","backgroundColor","onmouseenter","onmouseleave","setStyles","baseStyle","overStyle","i","setIcon","document","createElement","position","left","top","width","height","appendChild","src","ButtonText","Button"],"mappings":";;;;;;;AAAAA,QACC,8BACA,wCACA,YACC,SAASC,EAAOC,EAAUC,GAC3B,aAWA,IAAIC,EAAaH,EAAOI,SAEvBC,WAAa,SAAUC,GACtBN,EAAOO,UAAUF,WAAWG,KAAKC,KAAMH,EAAQ,OAE/CG,KAAKC,KAAKC,MAAMC,OAAS,UAEzBH,KAAKI,oBAGL,IAAIC,EAAOL,KAAKM,UAGhBN,KAAKC,KAAKC,MAAMK,MAAQF,EAAKG,UAC7BR,KAAKC,KAAKC,MAAMO,QAAU,OAoB1BT,KAAKU,aAGLV,KAAKW,SAASN,EAAKO,YAAaP,EAAKQ,iBAErCb,KAAKc,KAAKZ,MAAMa,WAAa,OAQ7Bf,KAAKgB,KAAO,KAIZhB,KAAKW,SAASN,EAAKO,YAAaP,EAAKQ,kBAYtCF,SAAW,SAASM,EAAWC,GAC9BlB,KAAKC,KAAKC,MAAMiB,gBAAkBF,EAElCjB,KAAKC,KAAKmB,aAAe,WACxBpB,KAAKE,MAAMiB,gBAAkBD,GAG9BlB,KAAKC,KAAKoB,aAAe,WACxBrB,KAAKE,MAAMiB,gBAAkBF,IAiB/BK,UAAY,SAASC,EAAWC,GAC/B,IAAI,IAAIC,KAAKF,EAEZvB,KAAKC,KAAKC,MAAMuB,GAAKF,EAAUE,GAGhCzB,KAAKC,KAAKmB,aAAe,WACxB,IAAI,IAAIK,KAAKD,EAEZxB,KAAKE,MAAMuB,GAAKD,EAAUC,IAI5BzB,KAAKC,KAAKoB,aAAe,WACxB,IAAI,IAAII,KAAKF,EACZvB,KAAKE,MAAMuB,GAAKF,EAAUE,KAa7BC,QAAU,SAASV,GACD,OAAdhB,KAAKgB,OACPhB,KAAKgB,KAAOW,SAASC,cAAc,OACnC5B,KAAKgB,KAAKd,MAAM2B,SAAW,WAC3B7B,KAAKgB,KAAKd,MAAMO,QAAU,QAC1BT,KAAKgB,KAAKd,MAAM4B,KAAO,MACvB9B,KAAKgB,KAAKd,MAAM6B,IAAM,MACtB/B,KAAKgB,KAAKd,MAAM8B,MAAQ,OACxBhC,KAAKgB,KAAKd,MAAM+B,OAAS,OACzBjC,KAAKC,KAAKiC,YAAYlC,KAAKgB,OAG5BhB,KAAKgB,KAAKmB,IAAMnB,MAGdxB,IAIJ,OAAOC,EAAMC,WAAaA,IAK1B,IAAI0C,WAAaC,OAAO1C,SAEvBC,WAAa,SAAUC,QAGpBL","file":"../ButtonMenu.js","sourcesContent":["define([\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"skylark-widgets-base/mixins/TextMixin\",\r\n\t\"../menus\"\r\n],function(Widget,TextMixin,menus){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Button used in dropdown menus, context menus, etc.\r\n\t * \r\n\t * The button has text and its possible to add a icon.\r\n\t *\r\n\t * @class ButtonMenu\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent widget.\r\n\t */\r\n\tvar ButtonMenu = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tthis._elm.style.cursor = \"pointer\";\r\n\r\n\t\t\tthis.preventDragEvents();\r\n\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\t//this._elm.style.color = Editor.theme.textColor;\r\n\t\t\tthis._elm.style.color = skin.textColor;\r\n\t\t\tthis._elm.style.display = \"flex\";\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t//Span\r\n\t\t\tthis.span = document.createElement(\"span\");\r\n\t\t\tthis.span.style.overflow = \"hidden\";\r\n\t\t\tthis._elm.appendChild(this.span);\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text = document.createTextNode(\"\");\r\n\t\t\tthis.span.appendChild(this.text);\r\n\r\n\r\n\t\t\t//this.setColor(Editor.theme.buttonColor, Editor.theme.buttonOverColor);\r\n\t\t\tthis.setColor(skin.buttonColor, skin.buttonOverColor);\r\n\t\t\tthis.allowWordBreak(false);\r\n\t\t\tthis.setVerticalAlignment(TextMixin.CENTER);\r\n\t\t\tthis.setAlignment(TextMixin.CENTER);\r\n\t\t\t*/\r\n\r\n\t\t\tthis._buildText();\r\n\r\n\t\t\t//this.setColor(Editor.theme.buttonColor, Editor.theme.buttonOverColor);\r\n\t\t\tthis.setColor(skin.buttonColor, skin.buttonOverColor);\r\n\r\n\t\t\tthis.span.style.textIndent = \"25px\";\r\n\r\n\t\t\t/**\r\n\t\t\t * Icon element.\r\n\t\t\t *\r\n\t\t\t * @attribute icon\r\n\t\t\t * @type {DOM}\r\n\t\t\t */\r\n\t\t\tthis.icon = null;\r\n\r\n\r\n\t\t\t//this.setColor(Editor.theme.buttonColor, Editor.theme.buttonOverColor);\r\n\t\t\tthis.setColor(skin.buttonColor, skin.buttonOverColor);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set button color.\r\n\t\t * \r\n\t\t * When mouse is over the button uses the overColor, when the mouse gets outside of the button it uses the base color.\r\n\t\t * \r\n\t\t * @method setColor\r\n\t\t * @param {String} baseColor CSS color for the button background.\r\n\t\t * @param {String} overColor CSS color for the button when mouse is over it.\r\n\t\t */\r\n\t\tsetColor : function(baseColor, overColor){\r\n\t\t\tthis._elm.style.backgroundColor = baseColor;\r\n\r\n\t\t\tthis._elm.onmouseenter = function()\t{\r\n\t\t\t\tthis.style.backgroundColor = overColor;\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseleave = function()\t{\r\n\t\t\t\tthis.style.backgroundColor = baseColor;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set button styles, the style can be descriped in a object.\r\n\t\t *\r\n\t\t * Here is an exaple of a style object:\r\n\t\t * {\r\n\t\t * backgroundColor: \"#FF0000\",\r\n\t\t * color: \"#FFFFFF\"\r\n\t\t * }\r\n\t\t *\r\n\t\t * @method setColor\r\n\t\t * @param {Object} baseStyle Object with the style to be applied as base.\r\n\t\t * @param {Object} overStyle Object with the style to be applied when mouse is over.\r\n\t\t */\r\n\t\tsetStyles : function(baseStyle, overStyle)\t{\r\n\t\t\tfor(var i in baseStyle)\r\n\t\t\t{\r\n\t\t\t\tthis._elm.style[i] = baseStyle[i];\r\n\t\t\t}\r\n\r\n\t\t\tthis._elm.onmouseenter = function()\t{\r\n\t\t\t\tfor(var i in overStyle)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.style[i] = overStyle[i];\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseleave = function()\t{\r\n\t\t\t\tfor(var i in baseStyle)\t{\r\n\t\t\t\t\tthis.style[i] = baseStyle[i];\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set button icon image URL.\r\n\t\t *\r\n\t\t * Creates the element if it still doesnt exist.\r\n\t\t *\r\n\t\t * @method setIcon\r\n\t\t * @param {String} icon Image URL.\r\n\t\t */\r\n\t\tsetIcon : function(icon) \t{\r\n\t\t\tif(this.icon === null) \t{\r\n\t\t\t\tthis.icon = document.createElement(\"img\");\r\n\t\t\t\tthis.icon.style.position = \"absolute\";\r\n\t\t\t\tthis.icon.style.display = \"block\";\r\n\t\t\t\tthis.icon.style.left = \"5px\";\r\n\t\t\t\tthis.icon.style.top = \"3px\";\r\n\t\t\t\tthis.icon.style.width = \"12px\";\r\n\t\t\t\tthis.icon.style.height = \"12px\";\r\n\t\t\t\tthis._elm.appendChild(this.icon);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.icon.src = icon;\r\n\t\t},\r\n\r\n\t\t...TextMixin\r\n\t\t\r\n\t});\r\n\r\n\treturn menus.ButtonMenu = ButtonMenu;\r\n});\r\n\r\n\r\n\r\n\tvar ButtonText = Button.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\r\n\t\t},\r\n\t\t...TextMixin\r\n\t});\r\n"]}