{"version":3,"sources":["skylark-widgets-menus.js"],"names":["define","skylark","attach","Widget","TextMixin","menus","ButtonMenu","inherit","_construct","parent","prototype","call","this","_elm","style","cursor","preventDragEvents","skin","getSkin","color","textColor","display","_buildText","setColor","buttonColor","buttonOverColor","span","textIndent","icon","baseColor","overColor","backgroundColor","onmouseenter","onmouseleave","setStyles","baseStyle","overStyle","i","setIcon","document","createElement","position","left","top","width","height","appendChild","src","Vector2","geom","Panel","DropdownMenu","Editor","theme","pointerEvents","panel","overflow","zIndex","arrow","right","arrowRightImageUrl","direction","DOWN","expanded","itemsSize","items","self","setExpanded","setDirection","location","showArrow","removeItem","index","length","destroy","splice","addItem","name","callback","button","setText","setAlignment","LEFT","set","setOnClick","undefined","push","addMenu","menu","setMargin","y","size","x","out","testAxis","bottom","UP","RIGHT","updateItems","updateInterface","updateSize","addOption","updateOptions","ContextMenu","offset","text","Text","copy","updatePosition","removeOption","updateOption","main"],"mappings":";;;;;;;g4BAAAA,EAAA,+BACA,yBACA,SAAAC,GAEA,OAAAA,EAAAC,OAAA,sBAKAF,EAAA,oCACA,8BACA,wCACA,WACA,SAAAG,EAAAC,EAAAC,GACA,aAWA,IAAAC,EAAAH,EAAAI,SAEAC,WAAA,SAAAC,GACAN,EAAAO,UAAAF,WAAAG,KAAAC,KAAAH,EAAA,OAEAG,KAAAC,KAAAC,MAAAC,OAAA,UAEAH,KAAAI,oBAGA,IAAAC,EAAAL,KAAAM,UAGAN,KAAAC,KAAAC,MAAAK,MAAAF,EAAAG,UACAR,KAAAC,KAAAC,MAAAO,QAAA,OAoBAT,KAAAU,aAGAV,KAAAW,SAAAN,EAAAO,YAAAP,EAAAQ,iBAEAb,KAAAc,KAAAZ,MAAAa,WAAA,OAQAf,KAAAgB,KAAA,KAIAhB,KAAAW,SAAAN,EAAAO,YAAAP,EAAAQ,kBArEAF,SAAA,SAAAM,EAAAC,GACAlB,KAAAC,KAAAC,MAAAiB,gBAAAF,EAEAjB,KAAAC,KAAAmB,aAAA,WACApB,KAAAE,MAAAiB,gBAAAD,GAGAlB,KAAAC,KAAAoB,aAAA,WACArB,KAAAE,MAAAiB,gBAAAF,IAiBAK,UAAA,SAAAC,EAAAC,GACA,IAAA,IAAAC,KAAAF,EAEAvB,KAAAC,KAAAC,MAAAuB,GAAAF,EAAAE,GAGAzB,KAAAC,KAAAmB,aAAA,WACA,IAAA,IAAAK,KAAAD,EAEAxB,KAAAE,MAAAuB,GAAAD,EAAAC,IAIAzB,KAAAC,KAAAoB,aAAA,WACA,IAAA,IAAAI,KAAAF,EACAvB,KAAAE,MAAAuB,GAAAF,EAAAE,KAaAC,QAAA,SAAAV,GACA,OAAAhB,KAAAgB,OACAhB,KAAAgB,KAAAW,SAAAC,cAAA,OACA5B,KAAAgB,KAAAd,MAAA2B,SAAA,WACA7B,KAAAgB,KAAAd,MAAAO,QAAA,QACAT,KAAAgB,KAAAd,MAAA4B,KAAA,MACA9B,KAAAgB,KAAAd,MAAA6B,IAAA,MACA/B,KAAAgB,KAAAd,MAAA8B,MAAA,OACAhC,KAAAgB,KAAAd,MAAA+B,OAAA,OACAjC,KAAAC,KAAAiC,YAAAlC,KAAAgB,OAGAhB,KAAAgB,KAAAmB,IAAAnB,MAGAxB,IAIA,OAAAC,EAAAC,WAAAA,IAEAN,EAAA,sCACA,iCACA,oBAEA,8BACA,oCACA,wCACA,UACA,gBACA,SACAgD,EACAC,EAEA9C,EACA+C,EACA9C,EAEAC,EACAC,GAEA,aAWA,IAAA6C,EAAAhD,EAAAI,YACAH,EAEAI,WAAA,SAAAC,GACAN,EAAAO,UAAAF,WAAAG,KAAAC,KAAAH,EAAA,OAEA,IAAAQ,EAAAL,KAAAM,UAEAN,KAAAC,KAAAC,MAAAiB,gBAAAqB,OAAAC,MAAA7B,YACAZ,KAAAC,KAAAC,MAAAC,OAAA,UACAH,KAAAC,KAAAC,MAAAwC,cAAA,OAEA1C,KAAAU,aAEAV,KAAAI,oBAUAJ,KAAA2C,MAAA,IAAAL,EAAAzC,EAAA,OACAG,KAAA2C,MAAA1C,KAAAC,MAAA0C,SAAA,UACA5C,KAAA2C,MAAA1C,KAAAC,MAAAO,QAAA,OACAT,KAAA2C,MAAA1C,KAAAC,MAAA2C,OAAA,MAQA7C,KAAAgB,KAAA,KAQAhB,KAAA8C,MAAAnB,SAAAC,cAAA,OACA5B,KAAA8C,MAAA5C,MAAAO,QAAA,OACAT,KAAA8C,MAAA5C,MAAA2B,SAAA,WACA7B,KAAA8C,MAAA5C,MAAA6C,MAAA,MACA/C,KAAA8C,MAAA5C,MAAA6B,IAAA,MACA/B,KAAA8C,MAAA5C,MAAA8B,MAAA,OACAhC,KAAA8C,MAAA5C,MAAA+B,OAAA,OAEAjC,KAAA8C,MAAAX,IAAA9B,EAAA2C,mBACAhD,KAAAC,KAAAiC,YAAAlC,KAAA8C,OAQA9C,KAAAiD,UAAAV,EAAAW,KAQAlD,KAAAmD,UAAA,EACAnD,KAAAoD,UAAA,IAAAhB,EAAA,IAAA,IAUApC,KAAAqD,SAEA,IAAAC,EAAAtD,KAEAA,KAAAC,KAAAmB,aAAA,WAEAkC,EAAAC,aAAA,GAEAD,EAAArD,KAAAC,MAAAiB,gBAAAd,EAAAQ,iBAGAb,KAAAC,KAAAoB,aAAA,WAEAiC,EAAAC,aAAA,GAEAD,EAAArD,KAAAC,MAAAiB,gBAAAd,EAAAO,aAGAZ,KAAA2C,MAAA1C,KAAAmB,aAAA,WAEAkC,EAAAC,aAAA,IAGAvD,KAAA2C,MAAA1C,KAAAoB,aAAA,WAEAiC,EAAAC,aAAA,KAUAC,aAAA,SAAAC,GACAzD,KAAAiD,UAAAQ,GAQAC,UAAA,WACA1D,KAAA8C,MAAA5C,MAAAO,QAAA,SASAiB,QAAA,SAAAV,GACA,OAAAhB,KAAAgB,OACAhB,KAAAgB,KAAAW,SAAAC,cAAA,OACA5B,KAAAgB,KAAAd,MAAAO,QAAA,QACAT,KAAAgB,KAAAd,MAAA2B,SAAA,WACA7B,KAAAgB,KAAAd,MAAA4B,KAAA,MACA9B,KAAAgB,KAAAd,MAAA6B,IAAA,MACA/B,KAAAgB,KAAAd,MAAA8B,MAAA,OACAhC,KAAAgB,KAAAd,MAAA+B,OAAA,OACAjC,KAAAC,KAAAiC,YAAAlC,KAAAgB,OAGAhB,KAAAgB,KAAAmB,IAAAnB,GASA2C,WAAA,SAAAC,GACAA,GAAA,GAAAA,EAAA5D,KAAAqD,MAAAQ,SACA7D,KAAAqD,MAAAO,GAAAE,UACA9D,KAAAqD,MAAAU,OAAAH,EAAA,KAaAI,QAAA,SAAAC,EAAAC,EAAAlD,GACA,IAAAmD,EAAA,IAAAzE,EAAAM,KAAA2C,OACAwB,EAAAlE,KAAAC,MAAA2C,OAAA,MACAsB,EAAAC,QAAAH,GACAE,EAAAE,aAAA7E,EAAA8E,MACAH,EAAAtC,SAAA0C,IAAA,GAAA,GAEA,IAAAjB,EAAAtD,KAYA,OAXAmE,EAAAK,WAAA,WACAN,IACAZ,EAAAC,aAAA,UAGAkB,IAAAzD,GACAmD,EAAAzC,QAAAV,GAGAhB,KAAAqD,MAAAqB,KAAAP,GAEAA,GAWAQ,QAAA,SAAAV,EAAAjD,GACA,IAAA4D,EAAA,IAAArC,EAAAvC,KAAA2C,OAcA,OAbAiC,EAAAR,QAAAH,GACAW,EAAApB,aAAAjB,EAAA+B,MACAM,EAAAlB,YACAkB,EAAAP,aAAA7E,EAAA8E,MACAM,EAAAC,UAAA,SAEAJ,IAAAzD,GAEA4D,EAAAlD,QAAAV,GAGAhB,KAAAqD,MAAAqB,KAAAE,GAEAA,GASArB,YAAA,SAAAJ,GAGA,GAFAnD,KAAAmD,SAAAA,EAEAnD,KAAAmD,UAGA,GAFAnD,KAAA2C,MAAA1C,KAAAC,MAAAO,QAAA,QAEAT,KAAAiD,YAAAV,EAAAW,KAAA,CACAlD,KAAA2C,MAAA1C,KAAAC,MAAA6B,IAAA/B,KAAA6B,SAAAiD,EAAA9E,KAAA+E,KAAAD,EAAA,KACA9E,KAAA2C,MAAA1C,KAAAC,MAAA4B,KAAA9B,KAAA6B,SAAAmD,EAAA,KAGA,IAAAC,EAAA5C,EAAA6C,SAAAlF,KAAA2C,OAEA,IAAAsC,EAAAH,IACA9E,KAAA2C,MAAA1C,KAAAC,MAAA6B,IAAA,KACA/B,KAAA2C,MAAA1C,KAAAC,MAAAiF,OAAAnF,KAAA6B,SAAAiD,EAAA9E,KAAA+E,KAAAD,EAAA,MAEA,IAAAG,EAAAD,IACAhF,KAAA2C,MAAA1C,KAAAC,MAAA4B,KAAA9B,KAAA6B,SAAAmD,EAAAC,EAAAD,EAAA,WAEA,GAAAhF,KAAAiD,YAAAV,EAAA6C,GAAA,CACApF,KAAA2C,MAAA1C,KAAAC,MAAAiF,OAAAnF,KAAA6B,SAAAiD,EAAA9E,KAAA+E,KAAAD,EAAA,KACA9E,KAAA2C,MAAA1C,KAAAC,MAAA4B,KAAA9B,KAAA6B,SAAAmD,EAAA,KAGA,IAAAC,EAAA5C,EAAA6C,SAAAlF,KAAA2C,OACA,IAAAsC,EAAAH,IAEA9E,KAAA2C,MAAA1C,KAAAC,MAAAiF,OAAA,KACAnF,KAAA2C,MAAA1C,KAAAC,MAAA6B,IAAA/B,KAAA6B,SAAAiD,EAAA9E,KAAA+E,KAAAD,EAAA,MAEA,IAAAG,EAAAD,IAEAhF,KAAA2C,MAAA1C,KAAAC,MAAA4B,KAAA9B,KAAA6B,SAAAmD,EAAAC,EAAAD,EAAA,WAGA,GAAAhF,KAAAiD,YAAAV,EAAA+B,KACA,CACAtE,KAAA2C,MAAA1C,KAAAC,MAAA6B,IAAA/B,KAAA6B,SAAAiD,EAAA,KACA9E,KAAA2C,MAAA1C,KAAAC,MAAA4B,KAAA9B,KAAA6B,SAAAmD,EAAAhF,KAAA+E,KAAAC,EAAA,KAGA,IAAAC,EAAA5C,EAAA6C,SAAAlF,KAAA2C,OACA,IAAAsC,EAAAD,IAEAhF,KAAA2C,MAAA1C,KAAAC,MAAA4B,KAAA9B,KAAA6B,SAAAmD,EAAAhF,KAAA+E,KAAAC,EAAA,MAEA,IAAAC,EAAAH,IAEA9E,KAAA2C,MAAA1C,KAAAC,MAAA6B,IAAA/B,KAAA6B,SAAAiD,EAAAG,EAAAH,EAAA,WAGA,GAAA9E,KAAAiD,YAAAV,EAAA8C,MACA,CACArF,KAAA2C,MAAA1C,KAAAC,MAAA6B,IAAA/B,KAAA6B,SAAAiD,EAAA,KACA9E,KAAA2C,MAAA1C,KAAAC,MAAA4B,KAAA9B,KAAA6B,SAAAmD,EAAAhF,KAAA+E,KAAAC,EAAA,KAGA,IAAAC,EAAA5C,EAAA6C,SAAAlF,KAAA2C,OACA,IAAAsC,EAAAD,IAEAhF,KAAA2C,MAAA1C,KAAAC,MAAA4B,KAAA9B,KAAA6B,SAAAmD,EAAAhF,KAAA+E,KAAAC,EAAA,MAEA,IAAAC,EAAAH,IAEA9E,KAAA2C,MAAA1C,KAAAC,MAAA6B,IAAA/B,KAAA6B,SAAAiD,EAAAG,EAAAH,EAAA,YAIA9E,KAAA2C,MAAA1C,KAAAC,MAAAO,QAAA,QASA6E,YAAA,WACA,IAAA,IAAA7D,EAAA,EAAAA,EAAAzB,KAAAqD,MAAAQ,OAAApC,IACAzB,KAAAqD,MAAA5B,GAAAsD,KAAAR,IAAAvE,KAAAoD,UAAA4B,EAAAhF,KAAAoD,UAAA0B,GACA9E,KAAAqD,MAAA5B,GAAAI,SAAA0C,IAAA,EAAAvE,KAAAoD,UAAA0B,EAAArD,GACAzB,KAAAqD,MAAA5B,GAAA8D,kBAGAvF,KAAA2C,MAAA1C,KAAAC,MAAA8B,MAAAhC,KAAA+E,KAAAC,EAAA,KACAhF,KAAA2C,MAAA1C,KAAAC,MAAA+B,OAAAjC,KAAAoD,UAAA0B,EAAA9E,KAAAqD,MAAAQ,OAAA,MAGAC,QAAA,WACAvE,EAAAO,UAAAgE,QAAA/D,KAAAC,MAEAA,KAAAH,OAAAiE,WAGA0B,WAAA,WACAhG,EAAAgG,WAAAzF,KAAAC,MAEAA,KAAAsF,iBAiBA,OAVA/C,EAAAW,KAAA,EACAX,EAAA6C,GAAA,EACA7C,EAAA+B,KAAA,EACA/B,EAAA8C,MAAA,EAGA9C,EAAAzC,UAAA2F,UAAAlD,EAAAzC,UAAAkE,QACAzB,EAAAzC,UAAA4F,cAAAnD,EAAAzC,UAAAwF,YAGA7F,EAAA8C,aAAAA,IAEAnD,EAAA,qCACA,iCACA,oBACA,oCACA,UACA,eACA,kBACA,SACAgD,EACAC,EAEAC,EACA7C,EACAC,EACA6C,GAEA,aASA,IAAAoD,EAAArD,EAAA3C,SAEAC,WAAA,SAAAC,GACAyC,EAAAxC,UAAAF,WAAAG,KAAAC,KAAAH,EAAA,OAEA,IAAAyD,EAAAtD,KAEAA,KAAAC,KAAAC,MAAA2B,SAAA,WACA7B,KAAAC,KAAAC,MAAA0C,SAAA,UACA5C,KAAAC,KAAAC,MAAA2C,OAAA,MACA7C,KAAAC,KAAAoB,aAAA,WACAiC,EAAAQ,WAGA9D,KAAA4F,OAAA,IAAAxD,EAAA,GAAA,IAQApC,KAAAqD,UAUAe,QAAA,SAAAyB,GACA7F,KAAA6F,KAAAzB,QAAAyB,IASAlC,WAAA,SAAAC,GACAA,GAAA,GAAAA,EAAA5D,KAAAqD,MAAAQ,SACA7D,KAAAqD,MAAAO,GAAAE,UACA9D,KAAAqD,MAAAU,OAAAH,EAAA,KAWAI,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAzE,EAAAM,MACAmE,EAAAlE,KAAAC,MAAA2C,OAAA,QACAsB,EAAAC,QAAAH,GACAE,EAAAE,aAAAyB,KAAAxB,MACAH,EAAAtC,SAAAmD,EAAA,GAEA,IAAA1B,EAAAtD,KACAmE,EAAAK,WAAA,WACAN,IACAZ,EAAAQ,YAGA9D,KAAAqD,MAAAqB,KAAAP,IAUAQ,QAAA,SAAAV,GACA,IAAAW,EAAA,IAAArC,EAAAvC,MASA,OARA4E,EAAAR,QAAAH,GACAW,EAAApB,aAAAjB,EAAA+B,MACAM,EAAAlB,YACAkB,EAAAP,aAAAyB,KAAAxB,MACAM,EAAAC,UAAA,IAEA7E,KAAAqD,MAAAqB,KAAAE,GAEAA,GAQAU,YAAA,WACA,IAAA,IAAA7D,EAAA,EAAAA,EAAAzB,KAAAqD,MAAAQ,OAAApC,IAEAzB,KAAAqD,MAAA5B,GAAAsD,KAAAgB,KAAA/F,KAAA+E,MACA/E,KAAAqD,MAAA5B,GAAAI,SAAA0C,IAAA,EAAAvE,KAAA+E,KAAAD,EAAArD,GACAzB,KAAAqD,MAAA5B,GAAA8D,mBAIAC,WAAA,WACAxF,KAAAC,KAAAC,MAAA8B,MAAAhC,KAAA+E,KAAAC,EAAA,KACAhF,KAAAC,KAAAC,MAAA+B,OAAAjC,KAAA+E,KAAAD,EAAA9E,KAAAqD,MAAAQ,OAAA,KAEA7D,KAAAsF,eAGAU,eAAA,WACAhG,KAAAC,KAAAC,MAAA6B,IAAA/B,KAAA6B,SAAAiD,EAAA9E,KAAA4F,OAAAd,EAAA,KACA9E,KAAAC,KAAAC,MAAA4B,KAAA9B,KAAA6B,SAAAmD,EAAAhF,KAAA4F,OAAAZ,EAAA,KAKA,IAAAC,EAAA5C,EAAA6C,SAAAlF,KAAAC,MACA,IAAAgF,EAAAD,IAEAhF,KAAAC,KAAAC,MAAA4B,KAAA9B,KAAA6B,SAAAmD,EAAAhF,KAAA4F,OAAAZ,EAAAhF,KAAA+E,KAAAC,EAAA,MAEA,IAAAC,EAAAH,IAEA9E,KAAAC,KAAAC,MAAA6B,IAAA/B,KAAA6B,SAAAiD,EAAA9E,KAAA4F,OAAAd,EAAAG,EAAAH,EAAA,SAUA,OAJAa,EAAA7F,UAAA2F,UAAAE,EAAA7F,UAAAkE,QACA2B,EAAA7F,UAAAmG,aAAAN,EAAA7F,UAAA6D,WACAgC,EAAA7F,UAAAoG,aAAAP,EAAA7F,UAAAwF,YAEA7F,EAAAkG,YAAAA,IAEAvG,EAAA,8BACA,UACA,eACA,gBACA,kBACA,SAAAK,GACA,OAAAA,IAEAL,EAAA,yBAAA,8BAAA,SAAA+G,GAAA,OAAAA","file":"../skylark-widgets-menus.js","sourcesContent":["define('skylark-widgets-menus/menus',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark) {\r\n\r\n\treturn skylark.attach(\"widgets.menus\",{});\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-menus/ButtonMenu',[\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"skylark-widgets-base/mixins/TextMixin\",\r\n\t\"./menus\"\r\n],function(Widget,TextMixin,menus){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Button used in dropdown menus, context menus, etc.\r\n\t * \r\n\t * The button has text and its possible to add a icon.\r\n\t *\r\n\t * @class ButtonMenu\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent widget.\r\n\t */\r\n\tvar ButtonMenu = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tthis._elm.style.cursor = \"pointer\";\r\n\r\n\t\t\tthis.preventDragEvents();\r\n\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\t//this._elm.style.color = Editor.theme.textColor;\r\n\t\t\tthis._elm.style.color = skin.textColor;\r\n\t\t\tthis._elm.style.display = \"flex\";\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t//Span\r\n\t\t\tthis.span = document.createElement(\"span\");\r\n\t\t\tthis.span.style.overflow = \"hidden\";\r\n\t\t\tthis._elm.appendChild(this.span);\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text = document.createTextNode(\"\");\r\n\t\t\tthis.span.appendChild(this.text);\r\n\r\n\r\n\t\t\t//this.setColor(Editor.theme.buttonColor, Editor.theme.buttonOverColor);\r\n\t\t\tthis.setColor(skin.buttonColor, skin.buttonOverColor);\r\n\t\t\tthis.allowWordBreak(false);\r\n\t\t\tthis.setVerticalAlignment(TextMixin.CENTER);\r\n\t\t\tthis.setAlignment(TextMixin.CENTER);\r\n\t\t\t*/\r\n\r\n\t\t\tthis._buildText();\r\n\r\n\t\t\t//this.setColor(Editor.theme.buttonColor, Editor.theme.buttonOverColor);\r\n\t\t\tthis.setColor(skin.buttonColor, skin.buttonOverColor);\r\n\r\n\t\t\tthis.span.style.textIndent = \"25px\";\r\n\r\n\t\t\t/**\r\n\t\t\t * Icon element.\r\n\t\t\t *\r\n\t\t\t * @attribute icon\r\n\t\t\t * @type {DOM}\r\n\t\t\t */\r\n\t\t\tthis.icon = null;\r\n\r\n\r\n\t\t\t//this.setColor(Editor.theme.buttonColor, Editor.theme.buttonOverColor);\r\n\t\t\tthis.setColor(skin.buttonColor, skin.buttonOverColor);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set button color.\r\n\t\t * \r\n\t\t * When mouse is over the button uses the overColor, when the mouse gets outside of the button it uses the base color.\r\n\t\t * \r\n\t\t * @method setColor\r\n\t\t * @param {String} baseColor CSS color for the button background.\r\n\t\t * @param {String} overColor CSS color for the button when mouse is over it.\r\n\t\t */\r\n\t\tsetColor : function(baseColor, overColor){\r\n\t\t\tthis._elm.style.backgroundColor = baseColor;\r\n\r\n\t\t\tthis._elm.onmouseenter = function()\t{\r\n\t\t\t\tthis.style.backgroundColor = overColor;\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseleave = function()\t{\r\n\t\t\t\tthis.style.backgroundColor = baseColor;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set button styles, the style can be descriped in a object.\r\n\t\t *\r\n\t\t * Here is an exaple of a style object:\r\n\t\t * {\r\n\t\t * backgroundColor: \"#FF0000\",\r\n\t\t * color: \"#FFFFFF\"\r\n\t\t * }\r\n\t\t *\r\n\t\t * @method setColor\r\n\t\t * @param {Object} baseStyle Object with the style to be applied as base.\r\n\t\t * @param {Object} overStyle Object with the style to be applied when mouse is over.\r\n\t\t */\r\n\t\tsetStyles : function(baseStyle, overStyle)\t{\r\n\t\t\tfor(var i in baseStyle)\r\n\t\t\t{\r\n\t\t\t\tthis._elm.style[i] = baseStyle[i];\r\n\t\t\t}\r\n\r\n\t\t\tthis._elm.onmouseenter = function()\t{\r\n\t\t\t\tfor(var i in overStyle)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.style[i] = overStyle[i];\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseleave = function()\t{\r\n\t\t\t\tfor(var i in baseStyle)\t{\r\n\t\t\t\t\tthis.style[i] = baseStyle[i];\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set button icon image URL.\r\n\t\t *\r\n\t\t * Creates the element if it still doesnt exist.\r\n\t\t *\r\n\t\t * @method setIcon\r\n\t\t * @param {String} icon Image URL.\r\n\t\t */\r\n\t\tsetIcon : function(icon) \t{\r\n\t\t\tif(this.icon === null) \t{\r\n\t\t\t\tthis.icon = document.createElement(\"img\");\r\n\t\t\t\tthis.icon.style.position = \"absolute\";\r\n\t\t\t\tthis.icon.style.display = \"block\";\r\n\t\t\t\tthis.icon.style.left = \"5px\";\r\n\t\t\t\tthis.icon.style.top = \"3px\";\r\n\t\t\t\tthis.icon.style.width = \"12px\";\r\n\t\t\t\tthis.icon.style.height = \"12px\";\r\n\t\t\t\tthis._elm.appendChild(this.icon);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.icon.src = icon;\r\n\t\t},\r\n\r\n\t\t...TextMixin\r\n\t\t\r\n\t});\r\n\r\n\treturn menus.ButtonMenu = ButtonMenu;\r\n});\ndefine('skylark-widgets-menus/DropdownMenu',[\r\n\t\"skylark-langx-numerics/Vector2\",\r\n\t\"skylark-domx-geom\",\r\n\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"skylark-widgets-base/panels/Panel\",\r\n\t\"skylark-widgets-base/mixins/TextMixin\",\r\n\t\"./menus\",\r\n\t\"./ButtonMenu\"\r\n],function(\r\n\tVector2,\r\n\tgeom,\r\n\r\n\tWidget,\r\n\tPanel,\r\n\tTextMixin,\r\n\r\n\tmenus,\r\n\tButtonMenu\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Dropdown menu element, used to create dropdowns in menu bars and in context menus.\r\n\t * \r\n\t * @class DropdownMenu\r\n\t * @extends {Text}\r\n\t * @param {Widget} parent Parent widget. \r\n\t */\r\n\r\n\r\n\tvar DropdownMenu = Widget.inherit({\r\n\t\t...TextMixin,\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.style.backgroundColor = Editor.theme.buttonColor;\r\n\t\t\tthis._elm.style.cursor = \"pointer\";\r\n\t\t\tthis._elm.style.pointerEvents = \"auto\";\r\n\r\n\t\t\tthis._buildText();\r\n\r\n\t\t\tthis.preventDragEvents();\r\n\r\n\t\t\t/**\r\n\t\t\t * Panel element, where the items are stored.\r\n\t\t\t *\r\n\t\t\t * This DOM element is added directly to the parent DOM element.\r\n\t\t\t *\r\n\t\t\t * @attribute panel\r\n\t\t\t * @type {DOM}\r\n\t\t\t */\r\n\t\t\tthis.panel = new Panel(parent, \"div\");\r\n\t\t\tthis.panel._elm.style.overflow = \"visible\";\r\n\t\t\tthis.panel._elm.style.display = \"none\";\r\n\t\t\tthis.panel._elm.style.zIndex = \"300\";\r\n\r\n\t\t\t/**\r\n\t\t\t * Item icon image, the element is only created when a icon is set.\r\n\t\t\t *\r\n\t\t\t * @attribute icon\r\n\t\t\t * @type {DOM}\r\n\t\t\t */\r\n\t\t\tthis.icon = null;\r\n\r\n\t\t\t/**\r\n\t\t\t * Decorative arrow.\r\n\t\t\t *\r\n\t\t\t * @attribute arrow\r\n\t\t\t * @type {DOM}\r\n\t\t\t */\r\n\t\t\tthis.arrow = document.createElement(\"img\");\r\n\t\t\tthis.arrow.style.display = \"none\";\r\n\t\t\tthis.arrow.style.position = \"absolute\";\r\n\t\t\tthis.arrow.style.right = \"5px\";\r\n\t\t\tthis.arrow.style.top = \"3px\";\r\n\t\t\tthis.arrow.style.width = \"12px\";\r\n\t\t\tthis.arrow.style.height = \"12px\";\r\n\t\t\t//this.arrow.src = Global.FILE_PATH + \"icons/misc/arrow_right.png\";\r\n\t\t\tthis.arrow.src = skin.arrowRightImageUrl;\r\n\t\t\tthis._elm.appendChild(this.arrow);\t\r\n\r\n\t\t\t/**\r\n\t\t\t * Direction to open the dropdown.\r\n\t\t\t *\r\n\t\t\t * @attribute direction\r\n\t\t\t * @type {Number}\r\n\t\t\t */\r\n\t\t\tthis.direction = DropdownMenu.DOWN;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Indicates if the dropdown menu is expanded.\r\n\t\t\t *\r\n\t\t\t * @attribute expanded\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tthis.expanded = false;\r\n\t\t\tthis.itemsSize = new Vector2(150, 20);\r\n\r\n\t\t\t/**\r\n\t\t\t * Items available in the dropdown.\r\n\t\t\t *\r\n\t\t\t * Items are stored as: {button:button, value:object, name:string}\r\n\t\t\t *\r\n\t\t\t * @attribute items\r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.items = [];\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tthis._elm.onmouseenter = function()\r\n\t\t\t{\r\n\t\t\t\tself.setExpanded(true);\r\n\t\t\t\t//self._elm.style.backgroundColor = Editor.theme.buttonOverColor;\r\n\t\t\t\tself._elm.style.backgroundColor = skin.buttonOverColor;\r\n\t\t\t};\r\n\r\n\t\t\tthis._elm.onmouseleave = function()\r\n\t\t\t{\r\n\t\t\t\tself.setExpanded(false);\r\n\t\t\t\t//self._elm.style.backgroundColor = Editor.theme.buttonColor;\r\n\t\t\t\tself._elm.style.backgroundColor = skin.buttonColor;\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.panel._elm.onmouseenter = function()\r\n\t\t\t{\r\n\t\t\t\tself.setExpanded(true);\r\n\t\t\t};\r\n\r\n\t\t\tthis.panel._elm.onmouseleave = function()\r\n\t\t\t{\r\n\t\t\t\tself.setExpanded(false);\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set location to where items should open.\r\n\t\t *\r\n\t\t * @method setDirection\r\n\t\t */\r\n\t\tsetDirection : function(location) {\r\n\t\t\tthis.direction = location;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Show arrow.\r\n\t\t *\r\n\t\t * @method showArrow\r\n\t\t */\r\n\t\tshowArrow : function() {\r\n\t\t\tthis.arrow.style.display = \"block\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set icon.\r\n\t\t *\r\n\t\t * @method setIcon\r\n\t\t * @param {String} icon Image URL.\r\n\t\t */\r\n\t\tsetIcon : function(icon) {\r\n\t\t\tif(this.icon === null) {\r\n\t\t\t\tthis.icon = document.createElement(\"img\");\r\n\t\t\t\tthis.icon.style.display = \"block\";\r\n\t\t\t\tthis.icon.style.position = \"absolute\";\r\n\t\t\t\tthis.icon.style.left = \"5px\";\r\n\t\t\t\tthis.icon.style.top = \"3px\";\r\n\t\t\t\tthis.icon.style.width = \"12px\";\r\n\t\t\t\tthis.icon.style.height = \"12px\";\r\n\t\t\t\tthis._elm.appendChild(this.icon);\r\n\t\t\t}\r\n\r\n\t\t\tthis.icon.src = icon;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove item from menu.\r\n\t\t *\r\n\t\t * @method removeItem\r\n\t\t * @param {Number} index\r\n\t\t */\r\n\t\tremoveItem : function(index) {\r\n\t\t\tif(index >= 0 && index < this.items.length) {\r\n\t\t\t\tthis.items[index].destroy();\r\n\t\t\t\tthis.items.splice(index, 1);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add new item to menu\r\n\t\t *\r\n\t\t * @method addItem\r\n\t\t * @param {String} name of the item\r\n\t\t * @param {Function} callback Callback function\r\n\t\t * @param {String} icon Icon URL.\r\n\t\t * @return {ButtonMenu} Button created for the new item.\r\n\t\t */\r\n\t\taddItem : function(name, callback, icon) {\r\n\t\t\tvar button = new ButtonMenu(this.panel);\r\n\t\t\tbutton._elm.style.zIndex = \"200\";\r\n\t\t\tbutton.setText(name);\r\n\t\t\tbutton.setAlignment(TextMixin.LEFT);\r\n\t\t\tbutton.position.set(25, 0);\r\n\r\n\t\t\tvar self = this;\r\n\t\t\tbutton.setOnClick(function(){\r\n\t\t\t\tcallback();\r\n\t\t\t\tself.setExpanded(false);\r\n\t\t\t});\r\n\r\n\t\t\tif(icon !== undefined) \t{\r\n\t\t\t\tbutton.setIcon(icon);\r\n\t\t\t}\r\n\r\n\t\t\tthis.items.push(button);\r\n\r\n\t\t\treturn button;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add new menu to menu.\r\n\t\t *\r\n\t\t * @method addItem\r\n\t\t * @param {String} name Name of the item.\r\n\t\t * @param {String} icon Optional icon, image URL.\r\n\t\t * @return {DropdownMenu} The new menu created.\r\n\t\t */\r\n\t\taddMenu : function(name, icon) {\r\n\t\t\tvar menu = new DropdownMenu(this.panel);\r\n\t\t\tmenu.setText(name);\r\n\t\t\tmenu.setDirection(DropdownMenu.LEFT);\r\n\t\t\tmenu.showArrow();\r\n\t\t\tmenu.setAlignment(TextMixin.LEFT);\r\n\t\t\tmenu.setMargin(25);\r\n\t\t\t\r\n\t\t\tif(icon !== undefined)\r\n\t\t\t{\r\n\t\t\t\tmenu.setIcon(icon);\r\n\t\t\t}\r\n\r\n\t\t\tthis.items.push(menu);\r\n\r\n\t\t\treturn menu;\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t * Update expanded state, position all items in this dropdown.\r\n\t\t * \r\n\t\t * @method setExpanded\r\n\t\t * @param {Boolean} expanded If true the menu will be expanded.\r\n\t\t */\r\n\t\tsetExpanded : function(expanded){\r\n\t\t\tthis.expanded = expanded;\r\n\r\n\t\t\tif(this.expanded) {\r\n\t\t\t\tthis.panel._elm.style.display = \"block\";\r\n\r\n\t\t\t\tif(this.direction === DropdownMenu.DOWN){\r\n\t\t\t\t\tthis.panel._elm.style.top = (this.position.y + this.size.y) + \"px\";\r\n\t\t\t\t\tthis.panel._elm.style.left = this.position.x + \"px\";\r\n\r\n\t\t\t\t\t//var out = DOMUtils.checkBorder(this.panel);\r\n\t\t\t\t\tvar out = geom.testAxis(this.panel);\r\n\r\n\t\t\t\t\tif(out.y !== 0)\t{\r\n\t\t\t\t\t\tthis.panel._elm.style.top = null;\r\n\t\t\t\t\t\tthis.panel._elm.style.bottom = (this.position.y + this.size.y) + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(out.x !== 0)\t{\r\n\t\t\t\t\t\tthis.panel._elm.style.left = (this.position.x - out.x) + \"px\"; \r\n\t\t\t\t\t}\r\n\t\t\t\t} else if(this.direction === DropdownMenu.UP){\r\n\t\t\t\t\tthis.panel._elm.style.bottom = (this.position.y + this.size.y) + \"px\";\r\n\t\t\t\t\tthis.panel._elm.style.left = this.position.x + \"px\";\r\n\r\n\t\t\t\t\t//var out = DOMUtils.checkBorder(this.panel);\r\n\t\t\t\t\tvar out = geom.testAxis(this.panel);\r\n\t\t\t\t\tif(out.y !== 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.panel._elm.style.bottom = null;\r\n\t\t\t\t\t\tthis.panel._elm.style.top = (this.position.y + this.size.y) + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(out.x !== 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.panel._elm.style.left = (this.position.x - out.x) + \"px\"; \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.direction === DropdownMenu.LEFT)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.panel._elm.style.top = this.position.y + \"px\";\r\n\t\t\t\t\tthis.panel._elm.style.left = (this.position.x + this.size.x) + \"px\";\r\n\r\n\t\t\t\t\t//var out = DOMUtils.checkBorder(this.panel);\r\n\t\t\t\t\tvar out = geom.testAxis(this.panel);\r\n\t\t\t\t\tif(out.x !== 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.panel._elm.style.left = (this.position.x - this.size.x) + \"px\"; \r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(out.y !== 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.panel._elm.style.top = (this.position.y - out.y) + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.direction === DropdownMenu.RIGHT)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.panel._elm.style.top = this.position.y + \"px\";\r\n\t\t\t\t\tthis.panel._elm.style.left = (this.position.x - this.size.x) + \"px\";\r\n\r\n\t\t\t\t\t//var out = DOMUtils.checkBorder(this.panel);\r\n\t\t\t\t\tvar out = geom.testAxis(this.panel);\r\n\t\t\t\t\tif(out.x !== 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.panel._elm.style.left = (this.position.x + this.size.x) + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(out.y !== 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.panel._elm.style.top = (this.position.y - out.y) + \"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.panel._elm.style.display = \"none\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all items in the menu.\r\n\t\t * \r\n\t\t * @method updateItems\r\n\t\t */\r\n\t\tupdateItems : function() {\r\n\t\t\tfor(var i = 0; i < this.items.length; i++) {\r\n\t\t\t\tthis.items[i].size.set(this.itemsSize.x, this.itemsSize.y);\r\n\t\t\t\tthis.items[i].position.set(0, this.itemsSize.y * i);\r\n\t\t\t\tthis.items[i].updateInterface();\r\n\t\t\t}\r\n\r\n\t\t\tthis.panel._elm.style.width = this.size.x + \"px\";\r\n\t\t\tthis.panel._elm.style.height = (this.itemsSize.y * this.items.length) + \"px\";\r\n\t\t},\r\n\r\n\t\tdestroy : function() {\r\n\t\t\tWidget.prototype.destroy.call(this);\r\n\r\n\t\t\tthis.parent.destroy();\r\n\t\t},\r\n\r\n\t\tupdateSize : function() {\r\n\t\t\tTextMixin.updateSize.call(this);\r\n\r\n\t\t\tthis.updateItems();\r\n\t\t}\r\n\r\n\r\n\t});\r\n\r\n\r\n\tDropdownMenu.DOWN = 0;\r\n\tDropdownMenu.UP = 1;\r\n\tDropdownMenu.LEFT = 2;\r\n\tDropdownMenu.RIGHT = 3;\r\n\r\n\r\n\tDropdownMenu.prototype.addOption = DropdownMenu.prototype.addItem;\r\n\tDropdownMenu.prototype.updateOptions = DropdownMenu.prototype.updateItems;\r\n\r\n\r\n\treturn menus.DropdownMenu = DropdownMenu;\r\n});\ndefine('skylark-widgets-menus/ContextMenu',[\r\n\t\"skylark-langx-numerics/Vector2\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-widgets-base/panels/Panel\",\r\n\t\"./menus\",\r\n\t\"./ButtonMenu\",\r\n\t\"./DropdownMenu\"\r\n],function(\r\n\tVector2,\r\n\tgeom,\r\n\r\n\tPanel,\r\n\tmenus,\r\n\tButtonMenu,\r\n\tDropdownMenu\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Context menu widget.\r\n\t * \r\n\t * @class ContextMenu\r\n\t * @extends {Panel}\r\n\t * @param {Widget} parent Parent widget.\r\n\t */\r\n\tvar ContextMenu = Panel.inherit({\r\n\r\n\t\t_construct : function (parent) {\t\r\n\t\t\tPanel.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tthis._elm.style.position = \"absolute\";\r\n\t\t\tthis._elm.style.overflow = \"visible\";\r\n\t\t\tthis._elm.style.zIndex = \"300\";\r\n\t\t\tthis._elm.onmouseleave = function()\t{\r\n\t\t\t\tself.destroy();\r\n\t\t\t};\r\n\r\n\t\t\tthis.offset = new Vector2(20, 10);\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Items in this menu.\r\n\t\t\t * \r\n\t\t\t * @attribute items\r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.items = [];\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set the text of this context menu.\r\n\t\t * \r\n\t\t * @method setText\r\n\t\t * @param {String} text\r\n\t\t */\r\n\t\tsetText : function(text) {\r\n\t\t\tthis.text.setText(text);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove item from context menu.\r\n\t\t *\r\n\t\t * @method removeItem\r\n\t\t * @param {Number} index\r\n\t\t */\r\n\t\tremoveItem : function(index) {\r\n\t\t\tif(index >= 0 && index < this.items.length)\t{\r\n\t\t\t\tthis.items[index].destroy();\r\n\t\t\t\tthis.items.splice(index, 1);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add new item to context menu\r\n\t\t *\r\n\t\t * @method addItem\r\n\t\t * @param {String} name of the item\r\n\t\t * @param {Function} callback Callback function\r\n\t\t */\r\n\t\taddItem : function(name, callback) {\r\n\t\t\tvar button = new ButtonMenu(this);\r\n\t\t\tbutton._elm.style.zIndex = \"10000\";\r\n\t\t\tbutton.setText(name);\r\n\t\t\tbutton.setAlignment(Text.LEFT);\r\n\t\t\tbutton.position.x = 25;\r\n\r\n\t\t\tvar self = this;\r\n\t\t\tbutton.setOnClick(function(){\r\n\t\t\t\tcallback();\r\n\t\t\t\tself.destroy();\r\n\t\t\t});\r\n\r\n\t\t\tthis.items.push(button);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add new menu to context menu\r\n\t\t *\r\n\t\t * @method addItem\r\n\t\t * @param {String} name of the item.\r\n\t\t * @return {DropdownMenu} The new menu created.\r\n\t\t */\r\n\t\taddMenu : function(name) {\r\n\t\t\tvar menu = new DropdownMenu(this);\r\n\t\t\tmenu.setText(name);\r\n\t\t\tmenu.setDirection(DropdownMenu.LEFT);\r\n\t\t\tmenu.showArrow();\r\n\t\t\tmenu.setAlignment(Text.LEFT);\r\n\t\t\tmenu.setMargin(25);\r\n\r\n\t\t\tthis.items.push(menu);\r\n\r\n\t\t\treturn menu;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all items in the menu.\r\n\t\t * \r\n\t\t * @method updateItems\r\n\t\t */\r\n\t\tupdateItems : function() {\r\n\t\t\tfor(var i = 0; i < this.items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.items[i].size.copy(this.size);\r\n\t\t\t\tthis.items[i].position.set(0, this.size.y * i);\r\n\t\t\t\tthis.items[i].updateInterface();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\t{\r\n\t\t\tthis._elm.style.width = this.size.x + \"px\";\r\n\t\t\tthis._elm.style.height = (this.size.y * this.items.length) + \"px\";\r\n\r\n\t\t\tthis.updateItems();\r\n\t\t},\r\n\r\n\t\tupdatePosition : function() {\r\n\t\t\tthis._elm.style.top = (this.position.y - this.offset.y) + \"px\";\r\n\t\t\tthis._elm.style.left = (this.position.x - this.offset.x) + \"px\";\r\n\r\n\t\t\t//Check if its inside window\r\n\t\t\t\r\n\t\t\t//var out = DOMUtils.checkBorder(this._elm);\r\n\t\t\tvar out = geom.testAxis(this._elm);\r\n\t\t\tif(out.x !== 0)\r\n\t\t\t{\r\n\t\t\t\tthis._elm.style.left = (this.position.x + this.offset.x - this.size.x) + \"px\"; \r\n\t\t\t}\r\n\t\t\tif(out.y !== 0)\r\n\t\t\t{\r\n\t\t\t\tthis._elm.style.top = (this.position.y - this.offset.y - out.y) + \"px\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t});\r\n\r\n\tContextMenu.prototype.addOption = ContextMenu.prototype.addItem;\r\n\tContextMenu.prototype.removeOption = ContextMenu.prototype.removeItem;\r\n\tContextMenu.prototype.updateOption = ContextMenu.prototype.updateItems;\r\n\r\n\treturn menus.ContextMenu = ContextMenu;\r\n});\ndefine('skylark-widgets-menus/main',[\r\n\t\"./menus\",\r\n\t\"./ButtonMenu\",\r\n\t\"./ContextMenu\",\r\n\t\"./DropdownMenu\"\r\n],function(menus){\r\n\treturn menus;\r\n});\ndefine('skylark-widgets-menus', ['skylark-widgets-menus/main'], function (main) { return main; });\n\n"]}