{"version":3,"sources":["skylark-widgets-base.js"],"names":["define","skylark","attach","actions","dnd","locales","mixins","panels","skins","list","register","skin","name","push","get","getList","slice","types","objects","events","Vector2","browser","datax","eventer","noder","files","geom","elmx","$","fx","plugins","HashMap","base","SkinManager","Widget","Plugin","inherit","klassName","_construct","parent","elm","options","element","isHtmlNode","this","_parse","isString","tagName","overrided","_velm","_elm","_create","Object","defineProperty","value","state","visible","size","location","_mode","TOP_LEFT","_init","addonCategoryOptions","addons","widgetCtor","constructor","categoryName","i","length","addonOption","addonName","addonSetting","addonCtor","ctor","addon","setParent","optionsAttr","data","options1","eval","mixin","template","createElement","style","position","overflow","Error","self","widgetClass","addClass","on","e","args","_refresh","_startup","updateLocation","mode","undefined","TOP_RIGHT","top","y","bottom","BOTTOM_LEFT","left","x","right","updateSize","width","height","setVisibility","updateVisibility","display","updates","mapping","attributs","properties","styles","setting","_addons","category","settings","clone","render","getEnclosing","selector","getEnclosed","children","ArrayList","getSkin","show","hide","focus","ex","blur","enable","set","disable","removeClass","aria","getEl","ariaTarget","_aria","setAttribute","attr","velm","ret","getAttr","setAttr","center","css","getStyle","setStyle","getData","setData","getParent","v","_parent","oldParent","_attachTo","_setupChild","detach","prop","getProp","setProp","throb","params","emit","type","createEvent","Emitter","prototype","call","update","target","before","after","append","remove","preventDragEvents","ondrop","preventDefault","ondragover","setAltText","altText","document","alignItems","zIndex","border","borderRadius","color","Editor","theme","textColor","backgroundColor","barColor","borderColor","body","appendChild","text","createTextNode","destroyFunction","destroy","contains","removeChild","pointerEvents","onmousemove","event","clientX","clientY","onmouseout","setOnClick","callback","onclick","removeAllChildren","firstChild","setMode","console","warn","updateInterface","updatePosition","attachTo","BOTTOM_RIGHT","meta","apply","arguments","addStatePropMethod","pluginName","widgetName","CanvasPane","getContext","pixelRatio","getPixelRatio","ImagePane","borderStyle","objectFit","setImage","source","src","TextMixin","_buildText","span","fitContent","allowWordBreak","setVerticalAlignment","CENTER","setAlignment","setFont","fontFamily","fontWeight","fontStyle","whiteSpace","wordBreak","setText","setTextBorder","textShadow","setTextSize","fontSize","setTextColor","setOverflow","ELLIPSIS","textOverflow","align","justifyContent","textAlign","LEFT","RIGHT","TOP","BOTTOM","measure","offsetWidth","offsetHeight","setMargin","margin","clientWidth","clientHeight","CLIP","TextPane","SubmitForm","autocomplete","noValidate","action","addEventListener","submit","Evented","ActionManager","addAction","fn","executeAction","removeAction","ActiionManager","Action","tooltip","icon","shortcut","_state","checked","disabled","execute","_execute","trigger","Panel","child","DualContainer","panelColor","_elmA","_elmB","resizeTab","cursor","resizeTabColor","tabPosition","tabPositionMax","tabPositionMin","tabSize","orientation","HORIZONTAL","resizing","movementX","VERTICAL","movementY","onmousedown","window","one","off","attachB","attachA","tabPositionAbs","log","elementA","elementB","DualPanel","divA","divB","createWidget","connect","onResize","manager","gui","setOnResize","RowsPanel","autoSize","fitElements","spacing","defaultTextWidth","rows","setAutoSize","add","addText","fit","Text","addDivision","division","nextRow","removeLastRow","row","pop","removeAll","j","sizeX","maxSizeY","DragBuffer","buffer","obj","indexOf","uuid","splice","font","sepColor","boxColor","iconColor","buttonColor","buttonOverColor","buttonLightColor","audioTrack","audioScrubber","audioProgress","main"],"mappings":"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","file":"../skylark-widgets-base.js","sourcesContent":["define('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{\r\n\t\t\"actions\":{},\r\n\t\t\"dnd\" : {},\r\n\t\t\"locales\" : {},\r\n\t\t\"mixins\" : {},\r\n\t\t\"panels\" : {},\r\n\t\t\"skins\" : {}\r\n\t});\r\n});\ndefine('skylark-widgets-base/skins/SkinManager',[\r\n],function(){\t\r\n\t\"use strict\";\r\n\r\n\tfunction SkinManager(){}\r\n\r\n\tvar list = [],\r\n\t\tskins = [];\r\n\r\n\t//Add skin to list\r\n\tfunction register(skin, name) {\r\n\t\tlist.push(name);\r\n\t\tskins[name] = skin;\r\n\t}\r\n\r\n\t//Get a skin instance\r\n\tfunction get(name) {\r\n\t\tif (!name) {\r\n\t\t\tname = list[0];\r\n\t\t}\r\n\r\n\t\treturn skins[name];\r\n\t};\r\n\r\n\tfunction getList() {\r\n\t\treturn list.slice();\r\n\t}\r\n\r\n\treturn {\r\n\t\tregister,\r\n\t\tget,\r\n\t\tgetList\r\n\t};\r\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx-ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-events\",\r\n  \"skylark-langx-numerics/Vector2\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\",\r\n  \"./skins/SkinManager\"\r\n],function(skylark,types,objects,events,Vector2,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base,SkinManager){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _construct : function(parent,elm,options) {\r\n        if (parent && !(parent instanceof Widget || parent.element)) {\r\n           options = elm;\r\n           elm = parent;\r\n           parent = null;\r\n        }\r\n        if (types.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        if (types.isString(options)) {\r\n          options = {\r\n            tagName : options\r\n          };\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = this.elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        /** \r\n         * True if the element is visible.\r\n         *\r\n         * @attribute visible\r\n         * @type {Boolean}\r\n         */\r\n        this.visible = true;\r\n        \r\n\r\n        //this.element.style.position = \"absolute\";\r\n        //this.element.style.overflow = \"hidden\";\r\n\r\n        /**\r\n         * Size of this component in px.\r\n         *\r\n         * @attribute size\r\n         * @type {Vector2}\r\n         */\r\n        this.size = new Vector2(0, 0);\r\n        \r\n        /**\r\n         * Location of this component relatively to its parent in px.\r\n         *\r\n         * @attribute location\r\n         * @type {Vector2}\r\n         */\r\n        this.location = new Vector2(0, 0);\r\n\r\n        /**\r\n         * Locationing mode, indicates how to anchor the component.\r\n         *\r\n         * @attribute mode\r\n         * @type {Number}\r\n         */\r\n        this._mode = Widget.TOP_LEFT;\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (types.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (parent) {\r\n          this.setParent(parent);\r\n        }\r\n        //if (this._elm.parentElement) {\r\n        //  // The widget is already in document\r\n        //  this._startup();\r\n        //}\r\n    },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = objects.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this.elmx(template);\r\n        } else {\r\n          var tagName = this.options.tagName;\r\n          if (tagName) {\r\n            return this.elmx(noder.createElement(tagName,{\r\n              style : {\r\n                position : \"absolute\",\r\n                overflow : \"hidden\"\r\n              }\r\n            }))\r\n          } else {\r\n            throw new Error(\"The template or tagName is not existed in options!\");\r\n          }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Update the location of this widget.\r\n     * \r\n     * @method updateLocation\r\n     */\r\n    updateLocation : function(mode) {\r\n      if(mode !== undefined) {\r\n        this._mode = mode;\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.TOP_RIGHT) {\r\n        this._elm.style.top = this.location.y + \"px\";\r\n      } else {\r\n        this._elm.style.bottom = this.location.y + \"px\";\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.BOTTOM_LEFT) {\r\n        this._elm.style.left = this.location.x + \"px\";\r\n      } else {\r\n        this._elm.style.right = this.location.x + \"px\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Update the size of this widget.\r\n     * \r\n     * @method updateSize\r\n     */\r\n    updateSize : function(){\r\n      this._elm.style.width = this.size.x + \"px\";\r\n      this._elm.style.height = this.size.y + \"px\";\r\n    },\r\n\r\n\r\n    /**\r\n     * Update visibility of this element.\r\n     *\r\n     * @method setVisibility\r\n     */\r\n    setVisibility : function(visible)   {\r\n      this.visible = visible;\r\n      this.updateVisibility();\r\n    },\r\n\r\n\r\n    /**\r\n     * Update the visibility of this widget.\r\n     *\r\n     * @method updateVisibility\r\n     */\r\n    updateVisibility : function() {\r\n      this._elm.style.display = this.visible ? \"block\" : \"none\";\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return objects.clone(category || null);\r\n      } else {\r\n        objects.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n\r\n    getSkin : function() {\r\n      return SkinManager.get();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n\r\n    /** \r\n     * Add a CSS class to the base DOM element of this Element.\r\n     * \r\n     * @method addClass\r\n     * @param {String} name Name of the class to be added.\r\n     */\r\n    addClass : function(name){\r\n      this._velm.addClass(name);\r\n      return this;\r\n    },\r\n\r\n    /** \r\n     * Remove a CSS class from the base DOM element of this Element.\r\n     * \r\n     * @method removeClass\r\n     * @param {String} name Name of the class to be removed.\r\n     */\r\n    removeClass: function(name) {\r\n      this._velm.removeClass(name);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getAttr : function(name) {\r\n      return this._velm.attr(name);\r\n    },\r\n\r\n    setAttr : function(name,value) {\r\n      this._velm.attr(name,value);\r\n      return this;\r\n    },\r\n\r\n\r\n    /**\r\n     * Calculate the location of the container to make it centered.\r\n     *\r\n     * Calculated relatively to its parent size.\r\n     * \r\n     * @method center\r\n     */\r\n    center : function() {\r\n      this.location.set((this.parent.size.x - this.size.x) / 2, (this.parent.size.y - this.size.y) / 2);\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getStyle : function(name) {\r\n      return this._velm.css(name);\r\n    },\r\n\r\n    setStyle : function(name,value) {\r\n      this._velm.css(name,value);\r\n      return this;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n\r\n    getData : function(name) {\r\n      return this._velm.data(name);\r\n    },\r\n\r\n    setData : function(name,value) {\r\n      this._velm.data(name,value);\r\n      return this;\r\n    },\r\n\r\n\r\n    parent : {\r\n      get : function() {\r\n        return this.getParent();\r\n      },\r\n      set : function(v) {\r\n        this.setParent(v);\r\n      }\r\n    },\r\n\r\n    getParent : function() {\r\n      return this._parent;\r\n    },\r\n\r\n    setParent : function(parent) {\r\n      var oldParent = this._parent;\r\n      this._parent = parent;\r\n      if (parent) {\r\n        this._attachTo(parent._elm || parent.element);\r\n        if (parent._setupChild) {\r\n          parent._setupChild(this);\r\n        }\r\n      } else if (oldParent) {\r\n        this.detach();\r\n      }\r\n      return this;\r\n    },\r\n\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getProp : function(name) {\r\n      return this._velm.prop(name);\r\n    },\r\n\r\n    setProp : function(name,value) {\r\n      this._velm.prop(name,value);\r\n      return this;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = events.createEvent(type,{\r\n        data : params\r\n      });\r\n      return events.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     * Update component appearance.\r\n     * \r\n     * Should be called after changing size or location.\r\n     *\r\n     * Uses the updateVisibility and if the element is visible calls the updateSize and updateLocation (in this order) methods to update the interface.\r\n     * \r\n     * @method update\r\n     */\r\n    update : function() {\r\n      this.updateVisibility();\r\n\r\n      if(this.visible) {\r\n        this.updateSize();\r\n        this.updateLocation();\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attachTo\r\n     * @return {Widget} This Widget.\r\n     */\r\n    _attachTo : function(target,position){\r\n        var elm = target.element || target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    },\r\n\r\n    preventDragEvents : function() {\r\n      this.element.ondrop = Widget.preventDefault;\r\n      this.element.ondragover = Widget.preventDefault;\r\n    },\r\n\r\n\r\n    element : {\r\n      get : function() {\r\n        return this._elm;\r\n      },\r\n\r\n      set : function(v) {\r\n        this._elm = v;\r\n      }\r\n    },\r\n\r\n    position : {\r\n      get : function() {\r\n        return this.location;\r\n      },\r\n\r\n      set : function(v) {\r\n        this.location = v;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Set alt text, that is displayed when the mouse is over the element. Returns the element created that is attached to the document body.\r\n     *\r\n     * @method setAltText\r\n     * @param {String} altText Alt text.\r\n     */\r\n    setAltText : function(altText)   {\r\n      var element = document.createElement(\"div\");\r\n      element.style.position = \"absolute\";\r\n      element.style.display = \"none\";\r\n      element.style.alignItems = \"center\";\r\n      element.style.zIndex = \"10000\";\r\n      element.style.border = \"3px solid\";\r\n      element.style.borderRadius = \"5px\";\r\n      element.style.color = Editor.theme.textColor;\r\n      element.style.backgroundColor = Editor.theme.barColor;\r\n      element.style.borderColor = Editor.theme.barColor;\r\n      element.style.height = \"fit-content\";\r\n      document.body.appendChild(element);\r\n\r\n      //Text\r\n      var text = document.createTextNode(altText);\r\n      element.appendChild(text);\r\n\r\n      //Destroy\r\n      var destroyFunction = this.destroy;\r\n      this.destroy = function()\r\n      { \r\n        destroyFunction.call(this);\r\n\r\n        if(document.body.contains(element))\r\n        {\r\n          document.body.removeChild(element);\r\n        }\r\n      };\r\n      \r\n      this._elm.style.pointerEvents = \"auto\"; \r\n\r\n      //Mouse mouse move event\r\n      this._elm.onmousemove = function(event) {\r\n        element.style.display = \"flex\";\r\n        element.style.left = (event.clientX + 8) + \"px\";\r\n        element.style.top = (event.clientY - 20) + \"px\";\r\n      };\r\n\r\n      //Mouse out event\r\n      this._elm.onmouseout = function()  {\r\n        element.style.display = \"none\";\r\n      };\r\n\r\n      return element;\r\n    },\r\n\r\n    /**\r\n     * Set method to be called on component click.\r\n     * \r\n     * @method setOnClick\r\n     * @param {Function} callback Function called when the component is clicked.\r\n     */\r\n    setOnClick : function(callback)  {\r\n      this._elm.onclick = callback;\r\n    },\r\n\r\n    /**\r\n     * Remove all DOM children from the element.\r\n     * \r\n     * @method removeAllChildren\r\n     */\r\n    removeAllChildren : function()   {\r\n      while(this._elm.firstChild) {\r\n        this._elm.removeChild(this._elm.firstChild);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Set positioning mode.\r\n     * \r\n     * @method setMode\r\n     * @param {Number} setMode\r\n     */\r\n    setMode : function(mode) {\r\n      this._mode = mode;\r\n      this._elm.style.bottom = null;\r\n      this._elm.style.right = null;\r\n      this._elm.style.left = null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Called to destroy a component.\r\n     *\r\n     * Destroy the element and removes it from its DOM parent.\r\n     * \r\n     * @method destroy\r\n     */\r\n    destroy : function()\r\n    {\r\n      if(this._parent)\r\n      {\r\n        if(this._parent.element)\r\n        {\r\n          if(this._parent.element.contains(this.element))\r\n          {\r\n            this._parent.element.removeChild(this.element);\r\n            this._parent = null;\r\n          }\r\n        }\r\n        else\r\n        {\r\n          console.warn(\"nunuStudio: Parent is not a Element.\", this);\r\n          if(this._parent.contains(this.element))\r\n          {\r\n            this._parent.removeChild(this.element);\r\n            this._parent = null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  Widget.prototype.updateInterface = Widget.prototype.update;\r\n  Widget.prototype.updatePosition = Widget.prototype.updateLocation;\r\n  Widget.prototype.attachTo = Widget.prototype.setParent;\r\n\r\n  /**\r\n   * Top-left locationing.\r\n   *\r\n   * @static\r\n   * @attribute TOP_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_LEFT = 0;\r\n\r\n  /**\r\n   * Top-right locationing.\r\n   *\r\n   * @static\r\n   * @attribute TOP_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_RIGHT = 1;\r\n\r\n  /**\r\n   * Bottom-left locationing.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_LEFT = 2;\r\n\r\n  /**\r\n   * Bottom-right locationing.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_RIGHT = 3;\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.preventDefault = function(event)\r\n  {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-base/CanvasPane',[\r\n  \"./base\",\r\n  \"./Widget\"\r\n],function(\r\n\tbase,\r\n\tWidget\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * DOM canvas element.\r\n\t * \r\n\t * @class Canvas\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\tvar CanvasPane = Widget.inherit({\r\n\t\t\"klassName\" : \"CanvasPane\",\r\n\r\n\t\t\"_construct\" : function (parent)\r\n\t\t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"canvas\");\r\n\r\n\t\t\tthis.preventDragEvents();\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Get a context from this canvas.\r\n\t\t * \r\n\t\t * @method getContext\r\n\t\t * @param {string} type Type of context to get \"2d\", \"webgl\", etc\r\n\t\t * @return {Object} Context obtained from the canvas.\r\n\t\t */\r\n\t\tgetContext : function(type)\r\n\t\t{\r\n\t\t\treturn this._elm.getContext(type);\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\r\n\t\t{\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\r\n\t\t\tvar pixelRatio = Editor.getPixelRatio();\r\n\t\t\t\r\n\t\t\tthis._elm.width = this.size.x * pixelRatio;\r\n\t\t\tthis._elm.height = this.size.y * pixelRatio;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.CanvasPane = CanvasPane;\r\n});\ndefine('skylark-widgets-base/ImagePane',[\r\n  \"./base\",\r\n  \"./Widget\"\r\n],function(\r\n\tbase,\r\n\tWidget\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * DOM image element.\r\n\t * \r\n\t * @class ImagePane\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\tvar ImagePane = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"img\");\r\n\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.objectFit = \"contain\"; //cover | fill\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set image from URL.\r\n\t\t * \r\n\t\t * @method setImage\r\n\t\t * @param {String} source Image URL.\r\n\t\t */\r\n\t\tsetImage : function(source)\t{\r\n\t\t\tthis._elm.src = source;\r\n\t\t}\r\n\t});\r\n\r\n\treturn base.ImagePane = ImagePane;\r\n});\ndefine('skylark-widgets-base/mixins/TextMixin',[\r\n\t\"skylark-langx-numerics/Vector2\",\r\n\t\"../Widget\"\r\n],function(\r\n\tVector2,\r\n\tWidget\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Text element without background.\r\n\t * \r\n\t * @class Text\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent widget.\r\n\t */\r\n\r\n\tvar TextMixin = {\r\n\t\t_buildText : function() {\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\t//this._elm.style.pointerEvents = \"none\";\r\n\t\t\t//this._elm.style.color = Editor.theme.textColor;\r\n\t\t\t//this._elm.style.color = skin.textColor;\r\n\t\t\t//this._elm.style.display = \"flex\";\r\n\r\n\t\t\t/** \r\n\t\t\t * Span DOM element used to represent the text.\r\n\t\t\t *\r\n\t\t\t * @attribute span\r\n\t\t\t * @type {DOM}\r\n\t\t \t */\r\n\t\t\tthis.span = document.createElement(\"span\");\r\n\t\t\tthis.span.style.overflow = \"hidden\";\r\n\t\t\tthis._elm.appendChild(this.span);\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text = document.createTextNode(\"\");\r\n\t\t\tthis.span.appendChild(this.text);\r\n\r\n\t\t\t/**\r\n\t\t\t * If set to true the text container will automatically fit the text size.\r\n\t\t\t *\r\n\t\t\t * @attribute fitContent\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tthis.fitContent = false;\r\n\r\n\t\t\tthis.allowWordBreak(false);\r\n\t\t\tthis.setVerticalAlignment(TextMixin.CENTER);\r\n\t\t\tthis.setAlignment(TextMixin.CENTER);\t\t\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set font to use for the text.\r\n\t\t * \r\n\t\t * @method setFont\r\n\t\t * @param {String} fontFamily Font family.\r\n\t\t * @param {Number} fontWeight Font weigth, sets how thick or thin characters in text should be displayed.\r\n\t\t * @param {String} fontStyle Font style, specifies the font style for a text.\r\n\t\t */\r\n\t\tsetFont : function(fontFamily, fontWeight, fontStyle) {\r\n\t\t\tthis.span.style.fontFamily = fontFamily;\r\n\r\n\t\t\tif(fontWeight !== undefined) {\r\n\t\t\t\tthis.span.style.fontWeight = fontWeight;\r\n\t\t\t}\r\n\r\n\t\t\tif(fontStyle !== undefined) {\r\n\t\t\t\tthis.span.style.fontStyle = fontStyle;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Enable of disable word breaking.\r\n\t\t *\r\n\t\t * @method allowWordBreak\r\n\t\t * @param {Boolean} line If true words can be breaked.\r\n\t\t */\r\n\t\tallowWordBreak : function(value) {\r\n\t\t\tif(value === true) {\r\n\t\t\t\tthis.span.style.whiteSpace = \"normal\";\r\n\t\t\t\tthis.span.style.wordBreak = \"break-word\";\r\n\t\t\t} else \t{\r\n\t\t\t\tthis.span.style.whiteSpace = \"pre\";\r\n\t\t\t\tthis.span.style.wordBreak = \"normal\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text.\r\n\t\t *\r\n\t\t * @method setText\r\n\t\t * @param {String} text Text. \r\n\t\t */\r\n\t\tsetText : function(text){\r\n\t\t\tthis.text.data = text;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text border.\r\n\t\t *\r\n\t\t * @method setTextBorder\r\n\t\t * @param {Number} size Border size in pixels.\r\n\t\t * @param {String} color CSS Color. \r\n\t\t */\r\n\t\tsetTextBorder : function(size, color) {\r\n\t\t\tthis.span.style.textShadow = \"-\" + size + \"px 0 \" + color + \", 0 \" + size + \"px \" + color + \", \" + size + \"px 0 \" + color + \", 0 -\" + size + \"px \" + color;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set Text size, in pixels.\r\n\t\t * \r\n\t\t * @method setTextSize\r\n\t\t * @param {Number} size Size in pixel for this text element.\r\n\t\t */\r\n\t\tsetTextSize : function(size) {\r\n\t\t\tthis._elm.style.fontSize = size + \"px\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text color.\r\n\t\t * \r\n\t\t * @method setTextColor\r\n\t\t * @param {String} color Color code.\r\n\t\t */\r\n\t\tsetTextColor : function(color) {\r\n\t\t\tthis.span.style.color = color;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text overflow handling\r\n\t\t *\r\n\t\t * @method setOverflow\r\n\t\t * @param {Number} overflow\r\n\t\t */\r\n\t\tsetOverflow : function(overflow) {\r\n\t\t\tif(overflow === TextMixin.ELLIPSIS) {\r\n\t\t\t\tthis.span.style.whiteSpace = \"nowrap\";\r\n\t\t\t\tthis.span.style.textOverflow = \"ellipsis\";\r\n\t\t\t} else \t{\r\n\t\t\t\tthis.span.style.whiteSpace = \"pre\";\r\n\t\t\t\tthis.span.style.textOverflow = \"clip\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text horizontal alignment.\r\n\t\t *  - TextMixin.CENTER\r\n\t\t *  - TextMixin.LEFT\r\n\t\t *  - TextMixin.RIGHT\r\n\t\t * \r\n\t\t * @method setAlignment\r\n\t\t * @param {Number} align Alingment mode.\r\n\t\t */\r\n\t\tsetAlignment : function(align) \t{\r\n\t\t\tif(align === TextMixin.CENTER) {\r\n\t\t\t\tthis._elm.style.justifyContent = \"center\";\r\n\t\t\t\tthis._elm.style.textAlign = \"center\";\r\n\t\t\t} else if(align === TextMixin.LEFT) {\r\n\t\t\t\tthis._elm.style.justifyContent = \"flex-start\";\r\n\t\t\t\tthis._elm.style.textAlign = \"left\";\r\n\t\t\t} else if(align === TextMixin.RIGHT) {\r\n\t\t\t\tthis._elm.style.justifyContent = \"flex-end\";\r\n\t\t\t\tthis._elm.style.textAlign = \"right\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text vertical alignment.\r\n\t\t *  - TextMixin.CENTER\r\n\t\t *  - TextMixin.TOP\r\n\t\t *  - TextMixin.BOTTOM\r\n\t\t * \r\n\t\t * @method setVerticalAlignment\r\n\t\t * @param {Number} align Alingment mode.\r\n\t\t */\r\n\t\tsetVerticalAlignment : function(align) {\r\n\t\t\tif(align === TextMixin.CENTER) {\r\n\t\t\t\tthis._elm.style.alignItems = \"center\";\r\n\t\t\t} else if(align === TextMixin.TOP) {\r\n\t\t \t\tthis._elm.style.alignItems = \"flex-start\";\r\n\t\t\t} else if(align === TextMixin.BOTTOM) {\r\n\t\t\t\tthis._elm.style.alignItems = \"flex-end\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get size of the text inside of this component in px.\r\n\t\t * \r\n\t\t * @method measure\r\n\t\t * @return {Vector2} A vector with the size of the text. \r\n\t\t */\r\n\t\tmeasure : function() \t{\r\n\t\t \treturn new Vector2(this.span.offsetWidth, this.span.offsetHeight);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set text internal margin in pixels.\r\n\t\t * \r\n\t\t * @method setMargin\r\n\t\t * @param {Number} margin Margin size in pixels.\r\n\t\t */\r\n\t\tsetMargin : function(margin) {\r\n\t\t\tthis.span.style.margin = margin + \"px\";\r\n\t\t},\r\n\r\n\t\tupdateSize : function() {\r\n\t\t\tif(this.fitContent) { \r\n\t\t\t\tthis.size.x = this.span.clientWidth;\r\n\t\t\t\tthis.size.y = this.span.clientHeight;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\t\t},\r\n\r\n\t\tupdateVisibility : function() {\r\n\t\t\tthis._elm.style.display = this.visible ? \"flex\" : \"none\";\r\n\t\t},\r\n\r\n\t\tCENTER : 0,\r\n\t\tLEFT : 1,\r\n\t    RIGHT : 2,\r\n\t    TOP : 3,\r\n\t    BOTTOM : 4,\r\n\r\n\t    CLIP : 10,\r\n\t    ELLIPSIS : 11\r\n\r\n\t};\r\n\r\n\r\n\treturn TextMixin;\r\n});\ndefine('skylark-widgets-base/TextPane',[\r\n  \"./base\",\r\n  \"./Widget\",\r\n  \"./mixins/TextMixin\"\r\n],function(\r\n\tbase,\r\n\tWidget,\r\n\tTextMixin\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Text element without background.\r\n\t * \r\n\t * @class Text\r\n\t * @extends {Element}\r\n\t * @param {Element} parent Parent element.\r\n\t */\r\n\r\n\tvar TextPane = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent,\"div\");\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.style.pointerEvents = \"none\";\r\n\t\t\tthis._elm.style.color = skin.textColor;\r\n\t\t\tthis._elm.style.display = \"flex\";\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\t\t * \r\n\t\t\t\t * Span DOM element used to represent the text.\r\n\t\t\t\t *\r\n\t\t\t\t * @attribute span\r\n\t\t\t\t * @type {DOM}\r\n\t\t\t \t \r\n\t\t\t\tthis.span = document.createElement(\"span\");\r\n\t\t\t\tthis.span.style.overflow = \"hidden\";\r\n\t\t\t\tthis.element.appendChild(this.span);\r\n\r\n\t\t\t\t//Text\r\n\t\t\t\tthis.text = document.createTextNode(\"\");\r\n\t\t\t\tthis.span.appendChild(this.text);\r\n\r\n\t\t\t\t**\r\n\t\t\t\t * If set to true the text container will automatically fit the text size.\r\n\t\t\t\t *\r\n\t\t\t\t * @attribute fitContent\r\n\t\t\t\t * @type {Boolean}\r\n\t\t\t\t *\r\n\t\t\t\tthis.fitContent = false;\r\n\r\n\t\t\t\tthis.allowWordBreak(false);\r\n\t\t\t\tthis.setVerticalAlignment(Text.CENTER);\r\n\t\t\t\tthis.setAlignment(Text.CENTER);\r\n\t\t\t*/\r\n\r\n\t\t\tthis._buildText();\r\n\r\n\r\n\t\t},\r\n\t\t...TextMixin\r\n\t});\r\n\t\r\n\tTextPane.CENTER = 0;\r\n\tTextPane.LEFT = 1;\r\n\tTextPane.RIGHT = 2;\r\n\tTextPane.TOP = 3;\r\n\tTextPane.BOTTOM = 4;\r\n\r\n\tTextPane.CLIP = 10;\r\n\tTextPane.ELLIPSIS = 11;\r\n\r\n\treturn base.TextPane = TextPane;\r\n});\ndefine('skylark-widgets-base/SubmitForm',[\n\t\"./base\",\n\t\"./Widget\"\n],function(base,Widget){\n\t\"use strict\";\n\n\t/**\n\t * DOM form element.\n\t * \n\t * This element should be used to encapsulate input elements that require autocompletion.\n\t * \n\t * @class Form\n\t * @extends {Widget}\n\t * @param {Widget} parent Parent element.\n\t */\n\tvar SubmitForm = Widget.inherit({\n\t\t\"_construct\" : function(parent)\n\t\t{\n\t\t\tWidget.prototype._construct.call(this, parent, \"form\");\n\n\t\t\tthis._elm.autocomplete = true;\n\t\t\tthis._elm.noValidate = true;\n\t\t\tthis._elm.action = \"javascript:void(0)\";\n\t\t\tthis._elm.addEventListener(\"submit\", function(event)\n\t\t\t{\n\t\t\t\tevent.preventDefault()\n\t\t\t\treturn false;\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Simulate the form submission.\n\t\t * \n\t\t * Should be called when sending data to the server to trigger the browser autocomplete system.\n\t\t * \n\t\t * Some form implementation might actually implement submission login under this method.\n\t\t *\n\t\t * @method submit\n\t\t */\n\t\tsubmit : function()\n\t\t{\n\t\t\tthis._elm.submit();\n\t\t}\n\n\t});\n\n\treturn base.SubmitForm = SubmitForm;\n});\n\ndefine('skylark-widgets-base/actions/ActionManager',[\r\n\t\"skylark-langx/Evented\",\r\n\t\"../base\"\r\n], function(Evented,base){\r\n\r\n\tvar ActionManager = Evented.inherit({\r\n\t\t\"klassName\"\t\t:\t\"ActionManager\",\r\n\r\n\r\n\t\taddAction : function(category,name,fn,options) {\r\n\r\n\t\t},\r\n\r\n\t\texecuteAction : function() {\r\n\r\n\t\t},\r\n\r\n\t\tremoveAction : function(category,name) {\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.actions.ActionManager = ActionManager;\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-base/actions/Action',[\r\n\t\"skylark-langx/objects\",\r\n\t\"skylark-langx/Evented\",\r\n\t\"skylark-data-collection/HashMap\",\r\n\t\"../base\",\r\n\t\"./ActionManager\"\r\n], function(objects,Evented, HashMap, base, ActiionManager){\r\n\r\n\tvar Action = Evented.inherit({\r\n\t\t\"klassName\" : \"Action\",\r\n\r\n\t\t\"name\"  : \"\",\r\n\r\n\t\t\"category\" : \"\",\r\n\r\n\t\t\"text\" : \"\",\r\n\r\n\t\t\"tooltip\" : \"\",\r\n\r\n\t\t\"icon\" : \"\",\r\n\r\n\t\t\"shortcut\" : \"\",\r\n\r\n\t\t\"state\"  : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn  this._state || (this._state = new HashMap({\r\n\t\t\t\t\tchecked : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_construct : function(options) {\r\n\t\t\tif (options) {\r\n\t\t\t\tobjects.mixin(this,options);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\r\n\t\t},\r\n\r\n\t    /**\r\n\t     * Executes the command. Additional arguments are passed to the executing function\r\n\t     *\r\n\t     * @return {$.Promise} a  promise that will be resolved when the command completes.\r\n\t     */\r\n\t\texecute: function(params){\r\n\t\t\tif (this._execute) {\r\n\t\t\t\tthis._execute(params);\r\n\t\t\t}\r\n\t\t\tthis.trigger(\"executed\",{\r\n\t\t\t\tparams :params\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t});\r\n\t\r\n\treturn base.actions.Action = Action;\r\n});\r\n\r\n\r\n\ndefine('skylark-widgets-base/panels/Panel',[\r\n\t\"../base\",\r\n\t\"../Widget\"\r\n],function(base,Widget){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * DOM division element.\r\n\t * \r\n\t * @class Division\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\tvar Panel = Widget.inherit({\r\n\t\t\"_construct\" : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\t//this._elm.style.overflow = \"visible\";\r\n\t\t},\r\n\r\n\t\t_setupChild : function(child) {\r\n        \tchild.element.style.position = \"absolute\";\r\n        \t//child.element.style.overflow = \"hidden\";\t\t\t\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\treturn base.panels.Panel = Panel;\r\n});\ndefine('skylark-widgets-base/panels/DualContainer',[\r\n\t\"../base\",\r\n\t\"./Panel\",\r\n],function( base, Panel){\r\n\t\"use strict\";\r\n\r\n\tvar DualContainer = Panel.inherit({\r\n\t\t\"klassName\" : \"DualContainer\",\r\n\r\n\t\t\"_construct\" : function (parent) {\r\n\t\t\tPanel.prototype._construct.call(this, parent);\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.style.overflow = \"hidden\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.panelColor;\r\n\r\n\t\t\t//Container A\r\n\t\t\tthis._elmA = null\r\n\r\n\t\t\t//Container B\r\n\t\t\tthis._elmB = null\r\n\r\n\t\t\t//Resize tab\r\n\t\t\tthis.resizeTab = document.createElement(\"div\");\r\n\t\t\tthis.resizeTab.style.position = \"absolute\";\r\n\t\t\tthis.resizeTab.style.cursor = \"e-resize\";\r\n\r\n\r\n\t\t\t//this.resizeTab.style.backgroundColor = Editor.theme.resizeTabColor;\r\n\t\t\tthis.resizeTab.style.backgroundColor = skin.resizeTabColor;\r\n\t\t\tthis._elm.appendChild(this.resizeTab);\r\n\r\n\t\t\t//Resize Tab\r\n\t\t\tthis.tabPosition = 0.5;\r\n\t\t\tthis.tabPositionMax = 0.95;\r\n\t\t\tthis.tabPositionMin = 0.05;\r\n\t\t\tthis.tabSize = 5;\r\n\t\t\tthis.orientation = DualContainer.HORIZONTAL;\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tfunction resizing(event) {\r\n\t\t\t\tif(self.orientation === DualContainer.HORIZONTAL)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tself.tabPosition += event.movementX / self.size.x;\r\n\t\t\t\t}\r\n\t\t\t\telse if(self.orientation === DualContainer.VERTICAL)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tabPosition += event.movementY / self.size.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Limit tab position\r\n\t\t\t\tif(self.tabPosition > self.tabPositionMax)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tabPosition = self.tabPositionMax;\r\n\t\t\t\t}\r\n\t\t\t\telse if(self.tabPosition < self.tabPositionMin)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.tabPosition = self.tabPositionMin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.updateInterface();\r\n\r\n\t\t\t}\r\n\t\t\t//Tab mouse down\r\n\t\t\tthis.resizeTab.onmousedown = function(event)\r\n\t\t\t{\r\n\t\t\t//\tself.manager.create();\r\n\t\t\t\tself.$(window).on(\"mousemove\",resizing);\r\n\t\t\t\tself.$(window).one(\"mouseup\",function(){\r\n\t\t\t\t\tself.$(window).off(\"mousemove\",resizing);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\t//Tab resize event manager\r\n\t\t\t//this.manager = new EventManager();\r\n\r\n\t\t\t//this.listenTo(this.$(window), \"mousemove\", function(event){\r\n\t\t\t//});\r\n\r\n\t\t\t//this.connect(window, \"mouseup\", function(event)\r\n\t\t\t//{\r\n\t\t\t//\tself.manager.destroy();\r\n\t\t\t//});\r\n\t\t},\r\n\r\n\t\tattach : function(element) \t{\r\n\t\t\tif(this._elmA === null)\r\n\t\t\t{\r\n\t\t\t\tthis.attachA(element);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this._elmB === null) {\r\n\t\t\t\tthis.attachB(element);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconsole.warn(\"nunuStudio: Cannot attach more elements.\");\r\n\t\t},\r\n\r\n\t\tattachA : function(element) {\r\n\t\t\tthis._elmA = element;\r\n\t\t\tthis._elmA.attachTo(this);\r\n\t\t},\r\n\r\n\t\tattachB : function(element) {\r\n\t\t\tthis._elmB = element;\r\n\t\t\tthis._elmB.attachTo(this);\r\n\t\t},\r\n\r\n\t\tupdateSize : function() {\r\n\t\t\tPanel.prototype.updateSize.call(this);\r\n\r\n\t\t\tif(this._elmA === null || this._elmB === null) \t{\r\n\t\t\t\tconsole.log(\"nunuStudio: Dual container elements are null\", this, this._elmA, this._elmB);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.orientation === DualContainer.HORIZONTAL) {\r\n\t\t\t\tvar tabPositionAbs = this.tabPosition * this.size.x;\r\n\r\n\t\t\t\tthis._elmA.position.set(0, 0);\r\n\t\t\t\tthis._elmA.size.set(tabPositionAbs, this.size.y);\r\n\t\t\t\tthis._elmA.updateInterface();\r\n\r\n\t\t\t\tthis._elmB.size.set(this.size.x - tabPositionAbs - this.tabSize, this.size.y);\r\n\t\t\t\tthis._elmB.position.set(this._elmA.size.x + this.tabSize, 0);\r\n\t\t\t\tthis._elmB.updateInterface();\r\n\r\n\t\t\t\tthis.resizeTab.style.cursor = \"e-resize\";\r\n\t\t\t\tthis.resizeTab.style.top = \"0px\";\r\n\t\t\t\tthis.resizeTab.style.left = this._elmA.size.x + \"px\";\r\n\t\t\t\tthis.resizeTab.style.width = this.tabSize + \"px\";\r\n\t\t\t\tthis.resizeTab.style.height = this.size.y + \"px\";\r\n\t\t\t} else if(this.orientation === DualContainer.VERTICAL) \t{\r\n\t\t\t\tvar tabPositionAbs = this.tabPosition * this.size.y;\r\n\t\t\t\t\r\n\t\t\t\tthis._elmA.position.set(0, 0);\r\n\t\t\t\tthis._elmA.size.set(this.size.x, tabPositionAbs);\r\n\t\t\t\tthis._elmA.updateInterface();\r\n\t\t\t\t\r\n\t\t\t\tthis._elmB.size.set(this.size.x, this.size.y - tabPositionAbs - this.tabSize);\r\n\t\t\t\tthis._elmB.position.set(0, this._elmA.size.y + this.tabSize);\r\n\t\t\t\tthis._elmB.updateInterface();\r\n\r\n\t\t\t\tthis.resizeTab.style.cursor = \"n-resize\";\r\n\t\t\t\tthis.resizeTab.style.top = this._elmA.size.y + \"px\";\r\n\t\t\t\tthis.resizeTab.style.left = \"0px\";\r\n\t\t\t\tthis.resizeTab.style.width = this.size.x + \"px\";\r\n\t\t\t\tthis.resizeTab.style.height = this.tabSize + \"px\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\telementA : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._elmA;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\telementB : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._elmB;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tDualContainer.HORIZONTAL = 0;\r\n\tDualContainer.VERTICAL = 1;\r\n\r\n\r\n\treturn base.panels.DualContainer = DualContainer;\r\n});\ndefine('skylark-widgets-base/panels/DualPanel',[\r\n\t\"../base\",\r\n\t\"./Panel\"\r\n],function( base, Panel){\r\n\t\"use strict\";\r\n\r\n\r\n\tvar DualPanel = Panel.inherit({\r\n\t\t\"klassName\" : \"DualPanel\",\r\n\r\n\t\t\"_construct\" : function (parent) {\r\n\t\t\tPanel.prototype._construct.call(this, parent);\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.style.overflow = \"hidden\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.panelColor;\t\t\r\n\t\t\tthis._elm.style.backgroundColor = skin.panelColor;\r\n\r\n\t\t\t//Division A\r\n\t\t\tthis.divA = new Panel(this);\r\n\t\t\t//this.divA.element.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis.divA.element.style.backgroundColor = skin.panelColor;\r\n\r\n\t\t\t//Division B\r\n\t\t\tthis.divB = new Panel(this);\r\n\t\t\t//this.divB.element.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis.divB.element.style.backgroundColor = skin.panelColor;\r\n\t\t\t\r\n\t\t\t//Resize tab\r\n\t\t\tthis.resizeTab = document.createWidget(\"div\");\r\n\t\t\tthis.resizeTab.style.position = \"absolute\";\r\n\t\t\tthis.resizeTab.style.cursor = \"e-resize\";\r\n\t\t\t//this.resizeTab.style.backgroundColor = Editor.theme.resizeTabColor;\r\n\t\t\tthis.resizeTab.style.backgroundColor = skin.resizeTabColor;\r\n\t\t\tthis._elm.appendChild(this.resizeTab);\r\n\r\n\t\t\t//Resize Tab\r\n\t\t\tthis.tabPosition = 0.5;\r\n\t\t\tthis.tabPositionMax = 1;\r\n\t\t\tthis.tabPositionMin = 0;\r\n\t\t\tthis.tabSize = 5;\r\n\t\t\tthis.orientation = DualPanel.HORIZONTAL;\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\t//Tab mouse down\r\n\t\t\t//this.resizeTab.onmousedown = function(event){\r\n\t\t\t//\tself.manager.create();\r\n\t\t\t//};\r\n\r\n\t\t\t//Tab resize event manager\r\n\t\t\t//this.manager = new EventManager();\r\n\t\t\tthis.connect(window, \"mousemove\", function(event){\r\n\t\t\t\tif(self.orientation === DualPanel.HORIZONTAL){\t\r\n\t\t\t\t\tself.tabPosition += event.movementX / self.size.x;\r\n\t\t\t\t} else if(self.orientation === DualPanel.VERTICAL) {\r\n\t\t\t\t\tself.tabPosition += event.movementY / self.size.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Limit tab position\r\n\t\t\t\tif(self.tabPosition > self.tabPositionMax) {\r\n\t\t\t\t\tself.tabPosition = self.tabPositionMax;\r\n\t\t\t\t} else if(self.tabPosition < self.tabPositionMin) {\r\n\t\t\t\t\tself.tabPosition = self.tabPositionMin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.updateInterface();\r\n\t\t\t\tself.onResize();\r\n\t\t\t});\r\n\r\n\t\t\tthis.connect(window, \"mouseup\", function(event) {\r\n\t\t\t\tself.manager.destroy();\r\n\t\t\t});\r\n\r\n\t\t\t//onResize callback\r\n\t\t\tthis.onResize = function() \t{\r\n\t\t\t\tEditor.gui.updateInterface();\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tsetOnResize : function(callback) {\r\n\t\t\tthis.onResize = callback;\r\n\t\t},\r\n\r\n\t\tupdateSize : function() {\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\r\n\t\t\tif(this.orientation === DualPanel.HORIZONTAL) {\r\n\t\t\t\tvar tabPositionAbs = this.tabPosition * this.size.x;\r\n\t\t\t\t\r\n\t\t\t\tthis.divA.position.set(0, 0);\r\n\t\t\t\tthis.divA.size.set(tabPositionAbs, this.size.y);\r\n\t\t\t\tthis.divA.updateInterface();\r\n\r\n\t\t\t\tthis.divB.size.set(this.size.x - tabPositionAbs - this.tabSize, this.size.y);\r\n\t\t\t\tthis.divB.position.set(this.divA.size.x + this.tabSize, 0);\r\n\t\t\t\tthis.divB.updateInterface();\r\n\r\n\t\t\t\tthis.resizeTab.style.cursor = \"e-resize\";\r\n\t\t\t\tthis.resizeTab.style.top = \"0px\";\r\n\t\t\t\tthis.resizeTab.style.left = this.divA.size.x + \"px\";\r\n\t\t\t\tthis.resizeTab.style.width = this.tabSize + \"px\";\r\n\t\t\t\tthis.resizeTab.style.height = this.size.y + \"px\";\r\n\t\t\t} else if(this.orientation === DualPanel.VERTICAL) {\r\n\t\t\t\tvar tabPositionAbs = this.tabPosition * this.size.y;\r\n\r\n\t\t\t\tthis.divA.position.set(0, 0);\r\n\t\t\t\tthis.divA.size.set(this.size.x, tabPositionAbs);\r\n\t\t\t\tthis.divA.updateInterface();\r\n\r\n\t\t\t\tthis.divB.size.set(this.size.x, this.size.y - tabPositionAbs - this.tabSize);\r\n\t\t\t\tthis.divB.position.set(0, this.divA.size.y + this.tabSize);\r\n\t\t\t\tthis.divB.updateInterface();\r\n\r\n\t\t\t\tthis.resizeTab.style.cursor = \"n-resize\";\r\n\t\t\t\tthis.resizeTab.style.top = this.divA.size.y + \"px\";\r\n\t\t\t\tthis.resizeTab.style.left = \"0px\";\r\n\t\t\t\tthis.resizeTab.style.width = this.size.x + \"px\";\r\n\t\t\t\tthis.resizeTab.style.height = this.tabSize + \"px\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\telementA : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._elmA;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\telementB : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._elmB;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tDualPanel.HORIZONTAL = 0;\r\n\tDualPanel.VERTICAL = 1;\r\n\r\n\treturn base.panels.DualPanel = DualPanel;\r\n});\r\n\ndefine('skylark-widgets-base/panels/RowsPanel',[\n\t\"skylark-langx-numerics/Vector2\",\n\t\"../base\",\n\t\"../TextPane\",\n\t\"./Panel\"\n],function(\n\tVector2,\n\tbase,\n\tTextPane,\n\tPanel\n){\n\t\"use strict\";\n\n\t/**\n\t * Table form element automatically organizes element into a grid like form.\n\t * \n\t * @class TableForm\n\t * @extends {Element}\n\t * @param {Element} parent Parent element.\n\t */\n\t var RowsPanel = Panel.inherit({\n\t\t\"_construct\" : function (parent)\n\t\t{\n\t\t\tPanel.prototype._construct.call(this, parent);\n\n\t\t\t\n\t\t\t/**\n\t\t\t * Set if the form needs to be automatically resized.\n\t\t\t *\n\t\t\t * @property autoSize\n\t\t\t * @type {Boolean}\n\t\t\t */\n\t\t\tthis.autoSize = true;\n\n\t\t\t/**\n\t\t\t * Resize the last element of the rows to fit the size of the container.\n\t\t\t *\n\t\t\t * @method fitElements\n\t\t\t * @type {Boolean}\n\t\t\t */\n\t\t\tthis.fitElements = true;\n\n\t\t\t/**\n\t\t\t * Spacing between elements and rows.\n\t\t\t *\n\t\t\t * @property spacing\n\t\t\t * @type {Vector2}\n\t\t\t */\n\t\t\tthis.spacing = new Vector2(5, 5);\n\n\t\t\t/**\n\t\t\t * Default text width.\n\t\t\t *\n\t\t\t * @property defaultTextWidth\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\tthis.defaultTextWidth = 80;\n\n\t\t\t/**\n\t\t\t * Rows of this form table.\n\t\t\t *\n\t\t\t * @property rows\n\t\t\t * @type {Array}\n\t\t\t */\n\t\t\tthis.rows = [];\n\t\t\tthis.rows.push([]);\n\t\t},\n\n\n\t\t/**\n\t\t * Set if the form should be automatically resized, and ajust overflow value.\n\t\t *\n\t\t * @method setAutoSize\n\t\t * @param {Boolean} autoSize\n\t\t */\n\t\tsetAutoSize : function(autoSize)\n\t\t{\n\t\t\tthis.autoSize = autoSize;\n\t\t\tthis.element.style.overflow = autoSize ? \"visible\" : \"auto\";\n\t\t},\n\n\t\t/**\n\t\t * Add a element to form (in actual row).\n\t\t *\n\t\t * @method add\n\t\t */\n\t\tadd : function(element)\n\t\t{\n\t\t\tif(this.rows.length > 0)\n\t\t\t{\n\t\t\t\tthis.rows[this.rows.length - 1].push(element);\n\t\t\t\telement.attachTo(this);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Create text element.\n\t\t *\n\t\t * @method addText\n\t\t */\n\t\taddText : function(text, fit)\n\t\t{\n\t\t\tvar element = new TextPane(this);\n\t\t\telement.setAlignment(TextPane.LEFT);\n\t\t\telement.setText(text);\n\t\t\telement.size.set(this.defaultTextWidth, 20);\n\t\t\t\n\t\t\tif(fit === true)\n\t\t\t{\n\t\t\t\telement.fitContent = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\telement.setOverflow(Text.ELLIPSIS);\n\t\t\t}\n\n\t\t\tthis.add(element);\n\n\t\t\treturn element;\n\t\t},\n\n\t\t/**\n\t\t * Create division.\n\t\t *\n\t\t * @method addDivision\n\t\t */\n\t\taddDivision : function(x, y)\n\t\t{\n\t\t\tvar division = new Panel(this);\n\t\t\tdivision.size.set(x, y);\n\t\t\tthis.add(division);\n\n\t\t\treturn division;\n\t\t},\n\n\t\t/**\n\t\t * Add new row to form.\n\t\t *\n\t\t * @method nextRow\n\t\t */\n\t\tnextRow : function()\n\t\t{\n\t\t\tthis.rows.push([]);\n\t\t},\n\n\t\t/**\n\t\t * Remove last row from form.\n\t\t *\n\t\t * @method removeLastRow\n\t\t */\n\t\tremoveLastRow : function()\n\t\t{\n\t\t\tif(this.rows.length > 0)\n\t\t\t{\n\t\t\t\tvar row = this.rows.pop();\n\n\t\t\t\tfor(var i = 0; i < row.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow[i].destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clear all elements from form.\n\t\t *\n\t\t * @method removeAll\n\t\t */\n\t\tremoveAll : function()\n\t\t{\n\t\t\tfor(var i = 0; i < this.rows.length; i++)\n\t\t\t{\n\t\t\t\tfor(var j = 0; j < this.rows[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tthis.rows[i][j].destroy();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.rows = [];\n\t\t\tthis.rows.push([]);\n\t\t},\n\n\t\tupdateSize : function()\n\t\t{\n\t\t\tvar x = 0, y = 0;\n\t\t\tvar sizeX = 0;\n\n\t\t\tif(!this.autoSize)\n\t\t\t{\n\t\t\t\tx = this.spacing.x;\n\t\t\t\ty = this.spacing.y;\n\t\t\t}\n\n\t\t\tfor(var i = 0; i < this.rows.length; i++)\n\t\t\t{\n\t\t\t\tvar maxSizeY = 0;\n\n\t\t\t\tfor(var j = 0; j < this.rows[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar element = this.rows[i][j];\n\t\t\t\t\t\n\t\t\t\t\tif(element.visible)\n\t\t\t\t\t{\n\t\t\t\t\t\t//Resize last element\n\t\t\t\t\t\tif(this.fitElements && j === this.rows[i].length - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\telement.size.x = this.size.x - x - 15;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telement.position.set(x, y);\n\t\t\t\t\t\telement.updateInterface();\n\n\t\t\t\t\t\t//Size tracker\n\t\t\t\t\t\tif(element.size.y > maxSizeY)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxSizeY = element.size.y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tx += element.size.x + this.spacing.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//Form size x\n\t\t\t\tif(sizeX < x)\n\t\t\t\t{\n\t\t\t\t\tsizeX = x;\n\t\t\t\t}\n\n\t\t\t\t//Update position tracker\n\t\t\t\tif(x !== 0)\n\t\t\t\t{\n\t\t\t\t\tx = this.autoSize ? 0 : this.spacing.x;\n\t\t\t\t\ty += maxSizeY + this.spacing.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(this.autoSize)\n\t\t\t{\n\t\t\t\tthis.size.set(sizeX, y);\n\t\t\t}\n\n\t\t\tPanel.prototype.updateSize.call(this);\n\t\t}\n\n\t });\n\n\n\treturn base.RowsPanel = RowsPanel;\n});\ndefine('skylark-widgets-base/dnd/DragBuffer',[\n],function(){\t\n\t\"use strict\";\n\n\t/**\n\t * The drag buffer is a global object used to store and get object being dragged.\n\t *\n\t * Objects are stored in an array and are indetified with a UUID.\n\t *\n\t * @static\n\t * @class DragBuffer\n\t */\n\tvar DragBuffer = {};\n\n\t/**\n\t * Object drag buffer, stores objects being dragged.\n\t *\n\t * @attribute buffer\n\t */\n\tDragBuffer.buffer = [];\n\n\t/** \n\t * Push elemento to drag buffer.\n\t *\n\t * Checks if element dont exist on drag buffer before inserting.\n\t *\n\t * @method push\n\t */\n\tDragBuffer.push = function(obj)\n\t{\n\t\tif(DragBuffer.buffer.indexOf(obj) === -1)\n\t\t{\n\t\t\tDragBuffer.buffer.push(obj);\n\t\t}\n\t};\n\n\t/** \n\t * Get element from drag buffer using its identifier.\n\t *\n\t * @method pop\n\t * @return {Object} Object indentfied by uuid, if not found return null.\n\t */\n\tDragBuffer.pop = function(uuid)\n\t{\n\t\tfor(var i = 0; i < DragBuffer.buffer.length; i++)\n\t\t{\n\t\t\tif(DragBuffer.buffer[i].uuid === uuid)\n\t\t\t{\n\t\t\t\tvar obj = DragBuffer.buffer[i];\n\t\t\t\tDragBuffer.buffer.splice(i, 1);\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t/** \n\t * Get element from drag buffer without removing it.\n\t *\n\t * @method get\n\t * @return {Object} Object indentfied by uuid, if not found return null.\n\t */\n\tDragBuffer.get = function(uuid)\n\t{\n\t\tfor(var i = 0; i < DragBuffer.buffer.length; i++)\n\t\t{\n\t\t\tif(DragBuffer.buffer[i].uuid === uuid)\n\t\t\t{\n\t\t\t\treturn DragBuffer.buffer[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t};\n\n\treturn DragBuffer;\n});\ndefine('skylark-widgets-base/skins/SkinDark',[\r\n\t\"./SkinManager\"\r\n],function(SkinManager){\t\r\n\t\"use strict\";\r\n\r\n\tfunction SkinDark() {\r\n\t\tthis.font = \"Arial\";\r\n\r\n\t\t//Color\r\n\t\tthis.barColor = \"#222222\";\r\n\t\tthis.sepColor = \"#292929\";\r\n\t\tthis.panelColor = \"#333333\";\r\n\t\tthis.resizeTabColor = \"#222222\";\r\n\t\tthis.boxColor = \"#444444\";\r\n\t\tthis.textColor = \"#FFFFFF\";\r\n\t\tthis.iconColor = \"#FFFFFF\";\r\n\r\n\t\t//Button\r\n\t\tthis.buttonColor = \"#222222\";\r\n\t\tthis.buttonOverColor = \"#555555\";\r\n\t\tthis.buttonLightColor = \"#333333\";\r\n\t\t\r\n\t\t//Audio player\r\n\t\tthis.audioTrack = \"#222222\";\r\n\t\tthis.audioScrubber = \"#FFFFFF\";\r\n\t\tthis.audioProgress = \"#555555\";\r\n\r\n\t\t//Body\r\n\t\tdocument.body.style.fontFamily = this.font;\r\n\t\tdocument.body.style.color = this.textColor;\r\n\t\tdocument.body.style.fontSize = \"12px\";\r\n\t}\r\n\r\n\r\n\tvar skin = new SkinDark();\r\n\r\n\tSkinManager.register(skin, \"dark\");\r\n\r\n\treturn skin;\r\n\r\n});\r\n\ndefine('skylark-widgets-base/main',[\r\n\t\"./base\",\r\n\t\"./Widget\",\r\n\t\"./CanvasPane\",\r\n\t\"./ImagePane\",\r\n\t\"./TextPane\",\r\n\t\"./SubmitForm\",\r\n\t\"./actions/Action\",\r\n\t\"./actions/ActionManager\",\r\n\t\"./panels/DualContainer\",\r\n    \"./panels/DualPanel\",\r\n    \"./panels/RowsPanel\",\r\n    \"./dnd/DragBuffer\",\r\n\t\"./skins/SkinManager\",\r\n\t\"./skins/SkinDark\"\r\n],function(base){\r\n\treturn base;\r\n});\ndefine('skylark-widgets-base', ['skylark-widgets-base/main'], function (main) { return main; });\n\n"]}