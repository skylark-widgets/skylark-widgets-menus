{"version":3,"sources":["plugins.js"],"names":["define","skylark","types","objects","funcs","Emitter","noder","datax","eventer","finder","geom","styler","fx","$","elmx","slice","Array","prototype","pluginKlasses","concat","shortcuts","instantiate","elm","pluginName","options","pair","split","instanceDataName","pluginInstance","data","Error","destroy","undefined","reset","pluginKlass","parentClass","ctor","hasOwnProperty","superclass","Object","getPrototypeOf","Plugin","inherit","klassName","_construct","this","_elm","_initOptions","constructor","cache","defaults","ctors","unshift","i","length","mixin","defineProperty","value","_destroy","unlistenTo","removeData","noop","_delay","handler","delay","instance","setTimeout","apply","arguments","option","key","parts","curOption","shift","pop","_setOptions","_setOption","getUID","prefix","Math","random","document","getElementById","plugins","fn","plugin","name","returnValue","args","call","self","each","partial","register","shortcutName","extfn","isFunction","shortcut","methodName","charAt","ret","shortcutter","args2","attach"],"mappings":"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","file":"../plugins.js","sourcesContent":["define([\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-objects\",\r\n    \"skylark-langx-funcs\",\r\n    \"skylark-langx-events/Emitter\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(\r\n    skylark,\r\n    types,\r\n    objects,\r\n    funcs,\r\n    Emitter, \r\n    noder, \r\n    datax, \r\n    eventer, \r\n    finder, \r\n    geom, \r\n    styler, \r\n    fx, \r\n    $, \r\n    elmx\r\n) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            //datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !types.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        args = slice.call(args,1); //remove method name\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && types.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    function parentClass(ctor){\r\n        if (ctor.hasOwnProperty(\"superclass\")) {\r\n            return ctor.superclass;\r\n        }\r\n\r\n        return Object.getPrototypeOf(ctor);\r\n    }\r\n\r\n \r\n    var Plugin =   Emitter.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = (ctor.hasOwnProperty(\"cache\") ? ctor.cache : {}),\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = parentClass(ctor);\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :objects.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n\r\n            this._destroy();\r\n\r\n            // remove all event lisener\r\n            this.unlistenTo();\r\n            // remove data \r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: funcs.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        elmx : function(elm) {\r\n            elm = elm || this._elm;\r\n            return elmx(elm);\r\n\r\n        },\r\n\r\n        $ : function(elm) {\r\n            elm = elm || this._elm;\r\n            return $(elm);\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return objects.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = objects.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    Plugin.instantiate = function(elm,options) {\r\n        return instantiate(elm,this.prototype.pluginName,options);\r\n    };\r\n    \r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue ;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this._elm,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    objects.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});"]}