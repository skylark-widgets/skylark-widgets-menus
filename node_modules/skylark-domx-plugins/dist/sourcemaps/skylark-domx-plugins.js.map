{"version":3,"sources":["skylark-domx-plugins.js"],"names":["define","skylark","types","objects","funcs","Emitter","noder","datax","eventer","finder","geom","styler","fx","$","elmx","slice","Array","prototype","pluginKlasses","concat","shortcuts","instantiate","elm","pluginName","options","pair","split","instanceDataName","pluginInstance","data","Error","destroy","removeData","undefined","reset","pluginKlass","Plugin","inherit","klassName","_construct","this","_elm","_initOptions","ctor","constructor","cache","defaults","ctors","unshift","superclass","i","length","hasOwnProperty","mixin","Object","defineProperty","value","_destroy","unlistenTo","noop","_delay","handler","delay","instance","setTimeout","apply","arguments","option","key","parts","curOption","shift","pop","_setOptions","_setOption","getUID","prefix","Math","random","document","getElementById","plugins","fn","plugin","name","args","call","self","returnValue","each","partial","register","shortcutName","extfn","isFunction","shortcut","methodName","charAt","ret","shortcutter","args2","attach","main"],"mappings":"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","file":"../skylark-domx-plugins.js","sourcesContent":["define('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-objects\",\r\n    \"skylark-langx-funcs\",\r\n    \"skylark-langx-events/Emitter\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(\r\n    skylark,\r\n    types,\r\n    objects,\r\n    funcs,\r\n    Emitter, \r\n    noder, \r\n    datax, \r\n    eventer, \r\n    finder, \r\n    geom, \r\n    styler, \r\n    fx, \r\n    $, \r\n    elmx\r\n) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !types.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        args = slice.call(args,1); //remove method name\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && types.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   Emitter.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :objects.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n\r\n            this._destroy();\r\n\r\n            // remove all event lisener\r\n            this.unlistenTo();\r\n            // remove data \r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: funcs.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        elmx : function(elm) {\r\n            elm = elm || this._elm;\r\n            return elmx(elm);\r\n\r\n        },\r\n\r\n        $ : function(elm) {\r\n            elm = elm || this._elm;\r\n            return $(elm);\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return objects.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = objects.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    Plugin.instantiate = function(elm,options) {\r\n        return instantiate(elm,this.prototype.pluginName,options);\r\n    };\r\n    \r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this._elm,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    objects.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\n"]}