{"version":3,"sources":["SingleUploader.js"],"names":["define","Emitter","Deferred","elmx","plugins","files","SingleUploader","Plugin","klassName","pluginName","options","selectors","picker","dropzone","pastezone","startUploads","cancelUploads","[object Object]","elm","super","this","_velm","_elm","_initFileHandlers","self","dzSelector","pzSelector","pkSelector","$","dropped","_addFile","pasted","multiple","picked","file","emit"],"mappings":";;;;;;;AAAAA,QACC,wBACA,+BACG,oBACA,uBACH,UACA,aACA,cACA,YACC,SACDC,EACAC,EACAC,EACAC,EACAC,GA6FA,OAAOA,EAAMC,6BArFgBF,EAAQG,OACpCC,gBACI,MAAO,iBAGRC,iBACG,MAAO,sBAGbC,cACM,OACKC,WACEC,OAAW,eACXC,SAAW,iBACXC,UAAW,kBAEXC,aAAc,iBACdC,cAAe,oBAU3BC,YAAaC,EAAKR,GACjBS,MAAMD,EAAIR,GAENU,KAAKC,MAAQlB,EAAKiB,KAAKE,MAE3BF,KAAKG,oBAILN,oBACI,IAAIO,EAAOJ,KAEPT,EAAYS,KAAKV,QAAQC,UAC5Bc,EAAad,EAAUE,SACvBa,EAAaf,EAAUG,UACvBa,EAAahB,EAAUC,OAEpBa,GACTL,KAAKC,MAAMO,EAAEH,GAAYZ,UACZgB,QAAU,SAAUxB,GAChBmB,EAAKM,SAASzB,EAAM,OAM5BqB,GACAN,KAAKC,MAAMO,EAAEF,GAAYZ,WACrBiB,OAAS,SAAU1B,GACfmB,EAAKM,SAASzB,EAAM,OAK5BsB,GACAP,KAAKC,MAAMO,EAAED,GAAYf,QACrBoB,UAAU,EACVC,OAAS,SAAU5B,GACfmB,EAAKM,SAASzB,EAAM,OAMnCY,SAASiB,GACNd,KAAKe,KAAK,QAASD,GAOxBjB","file":"../SingleUploader.js","sourcesContent":["define([\r\n\t\"skylark-langx-emitter\",\r\n\t\"skylark-langx-async/Deferred\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-plugins\",\r\n\t\"./files\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\"\r\n],function(\r\n\tEmitter, \r\n\tDeferred, \r\n\telmx,\r\n\tplugins,\r\n\tfiles\r\n) {\r\n\t//import ZipLoader from 'zip-loader';\r\n\r\n\t/**\r\n\t * Watches an element for file drops, parses to create a filemap hierarchy,\r\n\t * and emits the result.\r\n\t */\r\n\tclass SingleUploader extends plugins.Plugin {\r\n\t\tget klassName() {\r\n\t    \treturn \"SingleUploader\";\r\n    \t} \r\n\r\n    \tget pluginName(){\r\n      \t\treturn \"lark.singleuploader\";\r\n    \t} \r\n\r\n\t\tget options () {\r\n      \t\treturn {\r\n\t            selectors : {\r\n\t              picker   : \".file-picker\",\r\n\t              dropzone : \".file-dropzone\",\r\n\t              pastezone: \".file-pastezone\",\r\n\r\n\t              startUploads: '.start-uploads',\r\n\t              cancelUploads: '.cancel-uploads',\r\n\t            }\r\n\t     \t}\r\n\t\t}\r\n\r\n\r\n\t  /**\r\n\t   * @param  {Element} elm\r\n\t   * @param  [options] \r\n\t   */\r\n\t  constructor (elm, options) {\r\n\t  \tsuper(elm,options);\r\n\r\n        this._velm = elmx(this._elm);\r\n\r\n\t  \tthis._initFileHandlers();\r\n\r\n\t}\r\n\r\n    _initFileHandlers () {\r\n        var self = this;\r\n\r\n        var selectors = this.options.selectors,\r\n        \tdzSelector = selectors.dropzone,\r\n        \tpzSelector = selectors.pastezone,\r\n        \tpkSelector = selectors.picker;\r\n\r\n        if (dzSelector) {\r\n\t\t\tthis._velm.$(dzSelector).dropzone({\r\n                dropped : function (files) {\r\n                    self._addFile(files[0]);\r\n                }\r\n\t\t\t});\r\n        }\r\n\r\n\r\n        if (pzSelector) {\r\n            this._velm.$(pzSelector).pastezone({\r\n                pasted : function (files) {\r\n                    self._addFile(files[0]);\r\n                }\r\n            });                \r\n        }\r\n\r\n        if (pkSelector) {\r\n            this._velm.$(pkSelector).picker({\r\n                multiple: true,\r\n                picked : function (files) {\r\n                    self._addFile(files[0]);\r\n                }\r\n            });                \r\n        }\r\n    }\r\n\r\n     _addFile(file) {\r\n        this.emit('added', file);\t  \r\n     }\r\n\r\n\r\n\t  /**\r\n\t   * Destroys the instance.\r\n\t   */\r\n\t  destroy () {\r\n\t  }\r\n\r\n\r\n\t}\r\n\r\n\treturn files.SingleUploader = SingleUploader;\r\n\r\n});\r\n\r\n "]}