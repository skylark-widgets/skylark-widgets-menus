{"version":3,"sources":["skylark-langx-events.js"],"names":["define","skylark","attach","objects","funcs","klass","events","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","compatible","event","source","isDefaultPrevented","each","name","predicate","sourceMethod","this","returnTrue","apply","arguments","returnFalse","Event","CustomEvent","[object Object]","type","props","super","safeMixin","types","arrays","Array","prototype","slice","compact","isBoolean","isDefined","isPlainObject","isFunction","isString","isEmptyObject","Listener","mixin","listenTo","obj","callback","one","callbacks","on","listening","listeningTo","_listeningTo","i","length","push","listeningEvents","listeningEvent","indexOf","listenToOnce","unlistenTo","eventName","j","off","parse","segs","split","ns","join","Emitter","inherit","_prepareArgs","e","args","concat","selector","data","ctx","self","_hub","fn","undefined","Error","forEach","parsed","emit","Object","defineProperty","value","call","listeners","len","reCompact","isImmediatePropagationStopped","listener","startsWith","listened","evtArr","_events","evts","liveEvents","_","trigger","createEvent","main"],"mappings":";;;;;;;g4BAAAA,EAAA,+BACA,oBACA,SAAAC,GACA,OAAAA,EAAAC,OAAA,qBAEAF,EAAA,8BACA,wBACA,sBACA,sBACA,uBACA,YACA,SAAAG,EAAAC,EAAAC,EAAAC,GACA,IAAAC,GACAC,eAAA,qBACAC,yBAAA,gCACAC,gBAAA,wBAIA,SAAAC,EAAAC,EAAAC,GAeA,OAdAA,GAAAD,EAAAE,qBACAD,IACAA,EAAAD,GAGAT,EAAAY,KAAAR,EAAA,SAAAS,EAAAC,GACA,IAAAC,EAAAL,EAAAG,GACAJ,EAAAI,GAAA,WAEA,OADAG,KAAAF,GAAAb,EAAAgB,WACAF,GAAAA,EAAAG,MAAAR,EAAAS,YAEAV,EAAAK,GAAAb,EAAAmB,eAGAX,QAcAY,UAAAC,YACAC,YAAAC,EAAAC,GACAC,MAAAF,EAAAC,GACAzB,EAAA2B,UAAAX,KAAAS,GACAjB,EAAAQ,OAOA,OAFAK,EAAAb,WAAAA,EAEAL,EAAAkB,MAAAA,IAGAxB,EAAA,iCACA,sBACA,wBACA,uBACA,sBACA,WACA,WACA,SAAA+B,EAAA5B,EAAA6B,EAAA3B,EAAAC,EAAAkB,GACAS,MAAAC,UAAAC,MAAA,IACAC,EAAAJ,EAAAI,QAIAC,GAHAN,EAAAO,UACAP,EAAAQ,cACAR,EAAAS,WACAT,EAAAM,WACAI,EAAAV,EAAAU,SACAC,EAAAX,EAAAW,cA5EAC,GA6EAxC,EAAAyC,MACAzC,EAAA2B,UA9EAzB,GAEAwC,SAAA,SAAAC,EAAAlC,EAAAmC,EAAAC,GACA,IAAAF,EACA,OAAA3B,KAQA,GALAkB,EAAAU,KACAC,EAAAD,EACAA,EAAA,MAGAhB,EAAAQ,cAAA3B,GAAA,CAEA,IAAAqC,EAAArC,EACA,IAAA,IAAAI,KAAAiC,EACA9B,KAAA0B,SAAAC,EAAA9B,EAAAiC,EAAAjC,GAAAgC,GAEA,OAAA7B,KAGA4B,IACAA,EAAA,eAIAN,EAAAM,KACAA,EAAA5B,KAAA4B,IAGAC,EACAF,EAAAE,IAAApC,EAAAmC,EAAA5B,MAEA2B,EAAAI,GAAAtC,EAAAmC,EAAA5B,MAOA,IAHA,IACAgC,EADAC,EAAAjC,KAAAkC,eAAAlC,KAAAkC,iBAGAC,EAAA,EAAAA,EAAAF,EAAAG,OAAAD,IACA,GAAAF,EAAAE,GAAAR,KAAAA,EAAA,CACAK,EAAAC,EAAAE,GACA,MAGAH,GACAC,EAAAI,KACAL,GACAL,IAAAA,EACAxC,YAIA,IAAAmD,EAAAN,EAAA7C,OACAoD,EAAAD,EAAA7C,GAAA6C,EAAA7C,OAKA,OAJA,GAAA8C,EAAAC,QAAAZ,IACAW,EAAAF,KAAAT,GAGA5B,MAGAyC,aAAA,SAAAd,EAAAlC,EAAAmC,GACA,OAAA5B,KAAA0B,SAAAC,EAAAlC,EAAAmC,EAAA,IAGAc,WAAA,SAAAf,EAAAlC,EAAAmC,GACA,IAAAK,EAAAjC,KAAAkC,aACA,IAAAD,EACA,OAAAjC,KAGAsB,EAAAM,KACAA,EAAA5B,KAAA4B,IAGA,IAAA,IAAAO,EAAA,EAAAA,EAAAF,EAAAG,OAAAD,IAAA,CACA,IAAAH,EAAAC,EAAAE,GAEA,IAAAR,GAAAA,GAAAK,EAAAL,IAAA,CAIA,IAAAW,EAAAN,EAAA7C,OACA,IAAA,IAAAwD,KAAAL,EACA,IAAA7C,GAAAA,GAAAkD,EAAA,CAMA,IAFA,IAAAJ,EAAAD,EAAAK,GAEAC,EAAA,EAAAA,EAAAL,EAAAH,OAAAQ,IACAhB,GAAAA,GAAAW,EAAAJ,KACAH,EAAAL,IAAAkB,IAAAF,EAAAJ,EAAAJ,GAAAnC,MACAuC,EAAAJ,GAAA,MAIAI,EAAAD,EAAAK,GAAA1B,EAAAsB,GAEAhB,EAAAgB,KACAD,EAAAK,GAAA,MAKApB,EAAAe,KACAL,EAAAE,GAAA,OASA,OALAF,EAAAjC,KAAAkC,aAAAjB,EAAAgB,GACAV,EAAAU,KACAjC,KAAAkC,aAAA,MAGAlC,SAIA,OAAAb,EAAAqC,SAAAA,IAGA3C,EAAA,gCACA,sBACA,wBACA,uBACA,sBACA,WACA,UACA,cACA,SAAA+B,EAAA5B,EAAA6B,EAAA3B,EAAAC,EAAAkB,EAAAmB,GACA,IAAAR,EAAAF,MAAAC,UAAAC,MACAC,EAAAJ,EAAAI,QACAE,EAAAP,EAAAO,UACAC,EAAAR,EAAAQ,cACAC,EAAAT,EAAAS,WACAC,EAAAV,EAAAU,SAEAG,GADAb,EAAAW,cACAvC,EAAAyC,OACAzC,EAAA2B,UAEA,SAAAmC,EAAArD,GACA,IAAAsD,GAAA,GAAAtD,GAAAuD,MAAA,KACA,OACAnD,KAAAkD,EAAA,GACAE,GAAAF,EAAA/B,MAAA,GAAAkC,KAAA,MAIA,IAAAC,EAAA3B,EAAA4B,SACAC,aAAA,SAAAC,EAAAC,GAMA,OAJAA,EADApC,EAAAoC,IACAD,GAAAE,OAAAD,IAEAD,IAKAvB,GAAA,SAAA5C,EAAAsE,EAAAC,EAAA9B,EAAA+B,EAAA9B,GACA,IAAA+B,EAAA5D,KACA6D,EAAA7D,KAAA6D,OAAA7D,KAAA6D,SAEA,GAAAzC,EAAAjC,GAKA,OAJAwE,EAAA/B,EACAhC,KAAAT,EAAA,SAAAqB,EAAAsD,GACAF,EAAA7B,GAAAvB,EAAAiD,EAAAC,EAAAI,EAAAH,EAAA9B,KAEA7B,KAgBA,GAbAsB,EAAAmC,IAAApC,EAAAO,KACA+B,EAAA/B,EACAA,EAAA8B,EACAA,EAAAD,EACAA,OAAAM,GAGA1C,EAAAqC,KACAC,EAAA/B,EACAA,EAAA8B,EACAA,EAAA,OAGA9B,EACA,MAAA,IAAAoC,MAAA,wBACA,IAAA3C,EAAAO,GACA,MAAA,IAAAoC,MAAA,kCAsBA,OAnBA1C,EAAAnC,KACAA,EAAAA,EAAA6D,MAAA,OAGA7D,EAAA8E,QAAA,SAAAxE,GACA,IAAAyE,EAAApB,EAAArD,GACAI,EAAAqE,EAAArE,KACAoD,EAAAiB,EAAAjB,IAEAY,EAAAhE,KAAAgE,EAAAhE,QAAAwC,MACAyB,GAAAlC,EACA6B,SAAAA,EACAC,KAAAA,EACAC,IAAAA,EACAV,GAAAA,EACApB,IAAAA,MAIA7B,MAGA6B,IAAA,SAAA1C,EAAAsE,EAAAC,EAAA9B,EAAA+B,GACA,OAAA3D,KAAA+B,GAAA5C,EAAAsE,EAAAC,EAAA9B,EAAA+B,EAAA,IAGAQ,KAAA,SAAAb,GACA,IAAAtD,KAAA6D,KACA,OAAA7D,KAGA,IAAA4D,EAAA5D,KAEAsB,EAAAgC,KACAA,EAAA,IAAAjD,EAAAiD,IAGAc,OAAAC,eAAAf,EAAA,UACAgB,MAAAtE,OAGA,IAAAuD,EAAAvC,EAAAuD,KAAApE,UAAA,GA4CA,OA1CAoD,EAAAvD,KAAAqD,aAAAC,EAAAC,IAEAD,EAAA9C,MAAA8C,EAAAzD,KAAA,OAAAoE,QAAA,SAAAtB,GACA,IAAAuB,EAAApB,EAAAH,GACA9C,EAAAqE,EAAArE,KACAoD,EAAAiB,EAAAjB,GAEAuB,EAAAZ,EAAAC,KAAAhE,GACA,GAAA2E,EAAA,CAOA,IAHA,IAAAC,EAAAD,EAAApC,OACAsC,GAAA,EAEAvC,EAAA,EAAAA,EAAAsC,EAAAtC,IAAA,CACA,GAAAmB,EAAAqB,+BAAArB,EAAAqB,gCACA,OAAA3E,KAEA,IAAA4E,EAAAJ,EAAArC,KACAc,GAAA2B,EAAA3B,IAAA2B,EAAA3B,GAAA4B,WAAA5B,MAGAK,EAAAI,KACAkB,EAAAlB,OACAJ,EAAAI,KAAAjC,KAAAmD,EAAAlB,KAAAJ,EAAAI,OAGAJ,EAAAI,KAAAkB,EAAAlB,MAAA,KAEAkB,EAAAd,GAAA5D,MAAA0E,EAAAjB,IAAAJ,GACAqB,EAAA/C,MACA2C,EAAArC,GAAA,KACAuC,GAAA,IAIAA,IACAd,EAAAC,KAAAlB,GAAA1B,EAAAuD,OAIAxE,MAGA8E,SAAA,SAAArF,GACA,IAAAsF,GAAA/E,KAAA6D,OAAA7D,KAAAgF,aAAAvF,OACA,OAAAsF,EAAA3C,OAAA,GAGAS,IAAA,SAAA1D,EAAAyC,GACA,IAAAiC,EAAA7D,KAAA6D,OAAA7D,KAAA6D,SAuCA,OAtCAvC,EAAAnC,KACAA,EAAAA,EAAA6D,MAAA,OAGA7D,EAAA8E,QAAA,SAAAxE,GACA,IAAAyE,EAAApB,EAAArD,GACAI,EAAAqE,EAAArE,KACAoD,EAAAiB,EAAAjB,GAEAgC,EAAApB,EAAAhE,GAEA,GAAAoF,EAAA,CACA,IAAAC,KAEA,GAAAtD,GAAAqB,EACA,IAAA,IAAAd,EAAA,EAAAsC,EAAAQ,EAAA7C,OAAAD,EAAAsC,EAAAtC,IAEAP,GAAAqD,EAAA9C,GAAA2B,KAAAlC,GAAAqD,EAAA9C,GAAA2B,GAAAqB,IAAAvD,EACAsD,EAAA7C,KAAA4C,EAAA9C,KAIAc,GAAAgC,EAAA9C,GAAAc,IAAA,GAAAgC,EAAA9C,GAAAc,GAAAT,QAAAS,IACAiC,EAAA7C,KAAA4C,EAAA9C,IAMA+C,EAAA9C,OACAyB,EAAAhE,GAAAqF,SAEArB,EAAAhE,MAMAG,MAEAoF,QAAA,WACA,OAAApF,KAAAmE,KAAAjE,MAAAF,KAAAG,cAKA,OAAAhB,EAAAgE,QAAAA,IAGAtE,EAAA,oCACA,WACA,WACA,SAAAM,EAAAkB,GAOA,OAAAlB,EAAAkG,YANA,SAAA7E,EAAAC,GAGA,OAAA,IAAAJ,EAAAG,EAAAC,MAKA5B,EAAA,6BACA,WACA,UACA,aACA,YACA,iBACA,SAAAM,GACA,OAAAA,IAEAN,EAAA,wBAAA,6BAAA,SAAAyG,GAAA,OAAAA","file":"../skylark-langx-events.js","sourcesContent":["define('skylark-langx-events/events',[\r\n\t\"skylark-langx-ns\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"langx.events\",{});\r\n});\ndefine('skylark-langx-events/Event',[\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-klass\",\r\n  \"skylark-langx-hoster\",\r\n    \"./events\"\r\n],function(objects,funcs,klass,events){\r\n    var eventMethods = {\r\n        preventDefault: \"isDefaultPrevented\",\r\n        stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n        stopPropagation: \"isPropagationStopped\"\r\n     };\r\n        \r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            objects.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = funcs.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = funcs.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n\r\n    /*\r\n    var Event = klass({\r\n        _construct : function(type,props) {\r\n            CustomEvent.call(this,type.props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        }\r\n    },CustomEvent);\r\n    */\r\n\r\n    class Event extends CustomEvent {\r\n        constructor(type,props) {\r\n            super(type,props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        } \r\n    }\r\n\r\n\r\n    Event.compatible = compatible;\r\n\r\n    return events.Event = Event;\r\n    \r\n});\ndefine('skylark-langx-events/Listener',[\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./events\",\r\n  \"./Event\"\r\n],function(types,objects,arrays,klass,events,Event){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isBoolean = types.isBoolean,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n\r\n    var Listener = klass({\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            if (isBoolean(callback)) {\r\n                one = callback;\r\n                callback = null;\r\n            }\r\n\r\n            if (types.isPlainObject(event)){\r\n                //listenTo(obj,callbacks,one)\r\n                var callbacks = event;\r\n                for (var name in callbacks) {\r\n                    this.listenTo(obj,name,callbacks[name],one);\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (!callback) {\r\n                callback = \"handleEvent\";\r\n            }\r\n            \r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return events.Listener = Listener;\r\n\r\n});\ndefine('skylark-langx-events/Emitter',[\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./events\",\r\n  \"./Event\",\r\n  \"./Listener\"\r\n],function(types,objects,arrays,klass,events,Event,Listener){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = Listener.inherit({\r\n        _prepareArgs : function(e,args) {\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            return args;\r\n        },\r\n\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (!callback ) {\r\n                throw new Error(\"No callback function\");\r\n            } else if (!isFunction(callback)) {\r\n                throw new Error(\"The callback  is not afunction\");\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new Event(e); //new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n\r\n            args = this._prepareArgs(e,args);\r\n\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                        return this;\r\n                    }\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n\r\n    return events.Emitter = Emitter;\r\n\r\n});\ndefine('skylark-langx-events/createEvent',[\r\n\t\"./events\",\r\n\t\"./Event\"\r\n],function(events,Event){\r\n    function createEvent(type,props) {\r\n        //var e = new CustomEvent(type,props);\r\n        //return safeMixin(e, props);\r\n        return new Event(type,props);\r\n    };\r\n\r\n    return events.createEvent = createEvent;\t\r\n});\ndefine('skylark-langx-events/main',[\r\n\t\"./events\",\r\n\t\"./Event\",\r\n\t\"./Listener\",\r\n\t\"./Emitter\",\r\n\t\"./createEvent\"\r\n],function(events){\r\n\treturn events;\r\n});\ndefine('skylark-langx-events', ['skylark-langx-events/main'], function (main) { return main; });\n\n"]}