{"version":3,"sources":["Emitter.js"],"names":["define","types","objects","arrays","klass","events","Event","Listener","slice","Array","prototype","compact","isDefined","isPlainObject","isFunction","isString","mixin","isEmptyObject","safeMixin","parse","event","segs","split","name","ns","join","Emitter","inherit","_prepareArgs","e","args","concat","on","selector","data","callback","ctx","one","self","this","_hub","each","type","fn","undefined","Error","forEach","parsed","push","emit","Object","defineProperty","value","call","arguments","eventName","listeners","len","length","reCompact","i","isImmediatePropagationStopped","listener","startsWith","apply","listened","_events","off","evts","liveEvents","_","indexOf","trigger"],"mappings":"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","file":"../Emitter.js","sourcesContent":["define([\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./events\",\r\n  \"./Event\",\r\n  \"./Listener\"\r\n],function(types,objects,arrays,klass,events,Event,Listener){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = Listener.inherit({\r\n        _prepareArgs : function(e,args) {\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            return args;\r\n        },\r\n\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (!callback ) {\r\n                throw new Error(\"No callback function\");\r\n            } else if (!isFunction(callback)) {\r\n                throw new Error(\"The callback  is not afunction\");\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new Event(e); //new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n\r\n            args = this._prepareArgs(e,args);\r\n\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                        return this;\r\n                    }\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n\r\n    return events.Emitter = Emitter;\r\n\r\n})"]}