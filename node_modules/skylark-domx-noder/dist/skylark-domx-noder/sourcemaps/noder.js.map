{"version":3,"sources":["noder.js"],"names":["define","skylark","langx","browser","isIE","navigator","userAgent","match","fragmentRE","singleTagRE","div","document","createElement","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","map","Array","prototype","slice","ensureNodes","content","copyByClone","nodes","call","isArrayLike","value","isElement","isTextNode","test","createTextNode","filter","normalizeContent","node","cloneNode","flatten","nodeName","elm","chkName","name","toLowerCase","undefined","enhancePlaceContent","placing","isFunction","apply","neddsFlattern","i","length","append","parentNode","appendChild","this","tag","props","attrs","parent","createElementNS","isHtmlNode","setAttribute","fullscreen","el","exitFullscreen","requestFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","rxhtmlTag","isChildOf","directly","documentElement","contains","nodeType","ownerDoc","ownerDocument","isEditable","contentEditable","noder","mixin","active","doc","activeElement","error","body","after","refNode","nextSibling","insertBefore","before","blur","clone","deep","self","each","getAttribs","attr","setAttrib","getAttrib","child","contents","contentDocument","childNodes","createFragment","html","trim","RegExp","$1","container","innerHTML","xml","split","newXml","edsplit","removeSelfClosingTags","dom","forEach","removeChild","text","empty","hasChildNodes","firstChild","generateId","str","tagName","className","src","href","textContent","sum","charCodeAt","toString","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","fromPoint","x","y","elementFromPoint","isString","replace","isNumber","isActive","elem","type","isDocument","DOCUMENT_NODE","isFullscreen","isInDocument","isInFrame","window","isInput","isWindow","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","prepend","reflow","offsetHeight","remove","e","console","warn","children","oldNode","replaceChild","selectable","style","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","attach"],"mappings":"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","file":"../noder.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n\r\n    function normalizeContent(content) {\r\n        if (typeof content === 'function') {\r\n            content = content();\r\n        }\r\n        return map.call(langx.isArrayLike(content) ? content : [content],value => {\r\n            if (typeof value === 'function') {\r\n                value = value();\r\n            }\r\n            if (isElement(value) || isTextNode(value)) {\r\n                return value;\r\n            }\r\n            if (typeof value === 'string' && /\\S/.test(value)) {\r\n                return document.createTextNode(value);\r\n            }\r\n        }).filter(value => value);\r\n    }\r\n\r\n    function ensureNodes(content, copyByClone) {\r\n        var nodes = normalizeContent(content);\r\n\r\n\r\n        //if (!langx.isArrayLike(nodes)) {\r\n        //    nodes = [nodes];\r\n        //}\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {attrs} attrs\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props,attrs, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (langx.isHtmlNode(props)) {\r\n            parent = props;\r\n            props = null;\r\n            attrs = null;\r\n        } else if (langx.isHtmlNode(attrs)){\r\n            parent = attrs;\r\n            attrs = null;\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node[name] = props[name];\r\n            }\r\n        }\r\n\r\n        if (attrs) {\r\n            for (var name in attrs) {\r\n                node.setAttribute(name, attrs[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullscreen(el) {\r\n        if (el === false) {\r\n            return browser.exitFullscreen.apply(document);\r\n        } else if (el) {\r\n            return browser.requestFullscreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n    function isFullscreen(el) {\r\n        return fullscreen() === el;\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n    function fromPoint(x,y) {\r\n        return document.elementFromPoint(x,y);\r\n    }\r\n\r\n    /**\r\n     * Generate id\r\n     * @param   {HTMLElement} el\r\n     * @returns {String}\r\n     * @private\r\n     */\r\n    function generateId(el) {\r\n        var str = el.tagName + el.className + el.src + el.href + el.textContent,\r\n            i = str.length,\r\n            sum = 0;\r\n\r\n        while (i--) {\r\n            sum += str.charCodeAt(i);\r\n        }\r\n\r\n        return sum.toString(36);\r\n    }\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n    function isActive (elem) {\r\n            return elem === document.activeElement && (elem.type || elem.href);\r\n    }\r\n\r\n\r\n    function isTextNode(node) {\r\n        return node && node.nodeType === 3;\r\n    }\r\n\r\n\r\n    function isElement(node) {\r\n        return node && node.nodeType === 1;\r\n    }\r\n\r\n    function isInFrame() {\r\n        try {\r\n            return window.parent !== window.self;\r\n        } catch (x) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    function selectable(elem, selectable) {\r\n        if (elem === undefined || elem.style === undefined)\r\n            return;\r\n        elem.onselectstart = selectable ? function () {\r\n            return false;\r\n        } : function () {\r\n        };\r\n        elem.style.MozUserSelect = selectable ? 'auto' : 'none';\r\n        elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\r\n        elem.unselectable = selectable ? 'on' : 'off';\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function isInput (el) { \r\n        return el.tagName === 'INPUT' || \r\n               el.tagName === 'TEXTAREA' || \r\n               el.tagName === 'SELECT' || \r\n               isEditable(el); \r\n    }\r\n    \r\n    function isEditable (el) {\r\n      if (!el) { return false; } // no parents were editable\r\n      if (el.contentEditable === 'false') { return false; } // stop the lookup\r\n      if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\r\n      return isEditable(el.parentNode); // contentEditable is set to 'inherit'\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        after: after,\r\n\r\n        append: append,\r\n\r\n        before: before,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        contains: contains,\r\n\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        generateId,\r\n\r\n        fullscreen: fullscreen,\r\n\r\n        focusable: focusable,\r\n\r\n        fromPoint,\r\n\r\n        html: html,\r\n\r\n        isActive,\r\n\r\n        isChildOf,\r\n\r\n        isDocument,\r\n\r\n        isEditable,\r\n        \r\n        isElement,\r\n\r\n        isFullscreen,\r\n\r\n        isInDocument,\r\n\r\n        isInFrame,\r\n\r\n        isInput,\r\n\r\n        isTextNode,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        prepend: prepend,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        selectable,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});"]}